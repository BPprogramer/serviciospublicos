{"version":3,"sources":["desabilitarBtnSubmit.js","redireccion.js","cajas/abrir.js","cajas/cajasPagos.js","cajas/index.js","dashboard/facturas.js","dashboard/inicio.js","emitidas/index.js","estratos/crear.js","estratos/index.js","registrados/facturas.js","registrados/index.js","registrados/pagos.js","pagar/index.js","pagar/pagar.js","usuarios/index.js"],"names":["document","querySelector","btnSubmit","addEventListener","e","setTimeout","target","disabled","classList","add","alertaExitoFormulario","formulario","style","display","remove","urlActual","window","location","href","includes","redireccionar","efectivo_inicial","value","efectivo_inicial_sin_formato","parseFloat","replace","isNaN","efectivo_inicial_formateada","toLocaleString","formaterValor","tablaCajasPagos","URL","id","URLSearchParams","search","get","Number","isInteger","parseInt","$","dataTable","fnDestroy","DataTable","ajax","deferRender","retrieve","proccesing","responsive","tablaCajasData","alertaCierre","Swal","fire","title","text","icon","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","async","datos","FormData","append","url","respuesta","fetch","body","method","resultado","json","tipo","mensaje","reload","error","console","log","cerrarCaja","on","this","data","estadoCaja","dataset","cajaId","btnImprimirFacturas","contenedorSwitch","btnGenerarFacturas","alertaGenerarFacturasAuto","removeEventListener","type","msg","generarFacturas","revisarGeneraAuto","auto","checkbox","createElement","contains","checked","onchange","estado","cambiarEstadoAuto","slider","appendChild","generarCheckBox","eliminarFacturas","open","subscriptores","subscriptoresVigentes","subscriptoresInactivos","pagosVigentes","fecha","ingreso","ingresosMensuales","totalPagos","selectYear","selectMes","selectYearConsignacion","selectMesConsignacion","consignacionAseo","consignacionAlc","consignacionAcu","contenedor_estratos","btnImprimirFacturasFiltradas","leerInputs","textContent","consultarIngresosMensuales","leerInputsConsignacion","aseo","acueducto","alcantarillado","imprimirDatosConsignacion","consultarConsignaciones","consultarIngresosFecha","mostrarIngresos","registrados","registrados_activos","registrados_inactivos","pagos_vigentes","ingresos","mostrarResultados","informacionUsuario","fechaActual","Date","toISOString","slice","origin","forEach","estrato","option","consultarEstratos","estratoId","btoa","tablaEmitidasPendientesData","numero_factura","previsualizarFactura","attr","tarifaPlenaInput","porcentajeSubsidioInput","subsidioInput","copagoInput","porcentajeAcuInput","subsidioAcuInput","copagoAcuInput","totalAcuInput","porcentajeAlcInput","subsidioAlcInput","copagoAlcInput","totalAlcInput","porcentajeAseoInput","subsidioAseoInput","copagoAseoInput","totalAseoInput","ajusteInput","porcentajeAjusteInput","tarifa_plena","tarifa_plena_sin_formato","tarifa_plena_formateada","revisarValores","calcularDatos","porcentaje","subsidioInputRef","copagoInputRef","totalInputRef","porcentaje_subsidio","insertarDatos","toFixed","calcularSubsidioCopago","subsidio","copago","referencia1","referencia2","referencia3","total","valor_subsidio","valor_copago","ajuste","valor_ajuste","porcentaje_ajuste","calcularPorcentajeAjuste","tablaEstratosData","eventosClick","querySelectorAll","btnInfo","currentTarget","modal","innerHTML","year","facturas_vencidas","porcentaje_copago","preventDefault","mostrarInfo","infoEstrato","btnEliminar","eliminarEstrato","parentNode","children","enviarInformacionEliminar","contenedorFactura","nombreCliente","consultarFacturas","valorDeuda","deuda","imprimirDeuda","facturas","tabla","factura","fecha_emision","periodo_fin","periodo_inicio","pagado","combinado","saldo_anterior","mesActual","getMonth","arregloFecha","split","diferenciaFechas","tr","onclick","seleccionAnterior","seleccionFactura","acciones","firstChild","removeChild","limpiarHtml","accionesContenedor","accionesCliente","clienteLabel","clienteDato","accionesEstrato","estratoLabel","estratoDato","accionesPeriodo","periodoLabel","periodoDato","accionesMonto","montoLabel","montoTotal","montoDato","botonesContenedor","btnVerFactura","btnPagar","btnBanco","pagarFactura","informacionFactura","tdNumeroFactura","tdEmitida","tdPeriodo","tdMonto","tdEstado","imprimirResultados","metodo","registrado","metodoDatos","metodoLabel","metodoDato","registradoDatos","registradoLabel","registradoDato","periodoDatos","montoDatos","html","inputHidden","enviarInformacionPagar","tablaRegistradosData","eventosClickEditar","leerAccion","registradoId","eliminarRegistrado","contenedorPagado","consultarPagos","pagos","pago","fecha_pago","monto","numero_pago","seleccionarPago","recaudador","factura_id","accionesRecaudador","recaudadorLabel","recaudadorDato","accionesMetodo","previsualizarComprobante","informacionPago","tdFechaPago","tdNumeroPago","tdPagoAnulado","tablaPagosData","previsualizarPago","anularPago","inputCodigo","contenedorFacturas","guardarPagosBtn","totalFacturas","totalRecaudo","arreglofacturas","facturaEncontrada","find","position","showConfirmButton","timer","registrado_nombre","mes_facturado","unshift","subscriptor","recaudo","cantidadFacturas","tdRegistrado","tdEstrato","tdMesFacturado","tdCopago","infoFactura","consultarFactura","length","arregloPagos","map","JSON","stringify","guardarPagos","tablaUsuarios","tablaUsuariosData","eliminarUsuario","nombre","usuarioId","estadoActual","mensajeAlerta","enviarInformacionEstado","editarEstado"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n\r\n(function(){\r\n \r\n    const formulario =  document.querySelector('.formulario');\r\n\r\n    if(formulario){\r\n        \r\n        const btnSubmit = document.querySelector('.formulario [type=\"submit\"]');\r\n        if(btnSubmit){\r\n            btnSubmit.addEventListener('click',deshabilitarBoton);\r\n        }\r\n        \r\n       \r\n        function deshabilitarBoton(e){\r\n            setTimeout(()=>{\r\n                e.target.disabled = true;\r\n                e.target.classList.add('formulario__submit--deshabilitado');\r\n            },0)\r\n           \r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n    const alertaExitoFormulario = document.querySelector('.alerta__exito');\r\n    const formulario = document.querySelector('.formulario');\r\n    if(alertaExitoFormulario){\r\n        formulario.style.display='none';\r\n        setTimeout(()=>{\r\n            alertaExitoFormulario.remove();\r\n            redireccionar();\r\n\r\n        },3000);\r\n\r\n        function redireccionar(){\r\n            const urlActual = window.location.href;\r\n            if(urlActual.includes('/admin/usuarios/')){\r\n                window.location.href = '/admin/usuarios';\r\n            }\r\n            if(urlActual.includes('/admin/estratos/')){\r\n                window.location.href = '/admin/estratos';\r\n            }\r\n            if(urlActual.includes('/admin/registrados/')){\r\n                window.location.href = '/admin/registrados';\r\n            }\r\n            if(urlActual.includes('/admin/cajas/')){\r\n                window.location.href = '/admin/cajas';\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n  \r\n","(function(){\r\n    const caja = document.querySelector('#caja');\r\n    if(caja){\r\n        const efectivoInicialInput = document.querySelector('#efectivo_inicial');\r\n        efectivoInicialInput.addEventListener('input',function(e){\r\n            formaterValor(e)\r\n        })\r\n        function formaterValor(e){\r\n        \r\n        \r\n            const efectivo_inicial = e.target.value;\r\n            let efectivo_inicial_sin_formato = parseFloat(efectivo_inicial.replace(/,/g, ''));\r\n            if(isNaN(efectivo_inicial_sin_formato)){\r\n                efectivo_inicial_sin_formato = '';\r\n            }\r\n            const efectivo_inicial_formateada =  efectivo_inicial_sin_formato.toLocaleString('en');\r\n            e.target.value = efectivo_inicial_formateada ;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const infoCaja = document.querySelector('#tablaCajasPagos')\r\n \r\n    if(infoCaja){\r\n        let tablaCajasPagos;\r\n        const urlActual = new URL(window.location);\r\n        const params = new URLSearchParams(urlActual.search);\r\n        const id = params.get('id');\r\n        const infoCaja = document.querySelector('#tablaCajasPagos')\r\n    \r\n       \r\n        mostrarEstratos();\r\n        function mostrarEstratos(){\r\n            \r\n            if(Number.isInteger(parseInt(id))){\r\n         \r\n                $(\"#tablaCajasPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n                tablaCajasPagos = $('#tablaCajasPagos').DataTable({\r\n                    ajax:'/api/cajas/pagos?id='+id,\r\n                    \"deferRender\":true,\r\n                    \"retrieve\":true,\r\n                    \"proccesing\":true,\r\n                    responsive:true\r\n                });\r\n            \r\n                // $.ajax({\r\n                //     url:'/api/cajas/pagos?id='+id,\r\n                    \r\n                //     success:function(req){\r\n                //         console.log(req)\r\n                //     },\r\n                //     error:function(error){\r\n                //         console.log(error.responseText);\r\n                //     }\r\n                    \r\n                // })\r\n              \r\n            }else{\r\n                window.location.href='/admin/cajas'\r\n            }\r\n            \r\n        }\r\n    }\r\n})();","\r\n(function(){\r\n    const tablaCajas = document.querySelector('#tablaCajas');\r\n    if(tablaCajas){\r\n        \r\n\r\n        let tablaCajasData;\r\n\r\n        $('#tablaCajas').on('click', '#estadoCaja', function(e) {\r\n            // Manejar el evento aquí\r\n            const id = $(this).data('cajaId');\r\n            alertaCierre(id);\r\n        });\r\n       \r\n\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n        \r\n            tablaCajasData.on('draw', function(){\r\n                const estadoCaja = document.querySelector('#estadoCaja');\r\n                if(estadoCaja){\r\n\r\n                    estadoCaja.addEventListener('dblclick',function(e){\r\n                   \r\n                        const id = e.target.dataset.cajaId;\r\n                        alertaCierre(id);\r\n                    })\r\n                }\r\n           \r\n            });\r\n        }\r\n\r\n        function alertaCierre(id){\r\n            Swal.fire({\r\n                \r\n                title: 'Esta Seguro de Cerrar esta Caja?',\r\n                text:'Esta acción no se puede deshacer',\r\n                icon:'warning',\r\n                showDenyButton: true,\r\n          \r\n                confirmButtonText: 'Seguro',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                \r\n\r\n                if (result.isConfirmed) {\r\n                 \r\n                   cerrarCaja(id);\r\n                } \r\n              })\r\n        }\r\n\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n   \r\n            try {\r\n                const url = '/api/cajas/cerrar';\r\n                //const url =`${location.origin}/api/cajas/cerrar`;\r\n                //const url = 'http://localhost:3000/api/cajas/cerrar';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'success'){\r\n                    if(resultado.tipo=='error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: resultado.mensaje,\r\n            \r\n                        })\r\n                        return;\r\n                    }\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                      \r\n                        text: resultado.mensaje,\r\n                        \r\n                    })\r\n                    tablaCajasData.ajax.reload(); \r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function mostrarEstratos(){\r\n            $(\"#tablaCajas\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaCajasData = $('#tablaCajas').DataTable({\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n    }\r\n})();\r\n\r\n\r\n","\r\n\r\n(function(){\r\n    \r\n    const btnImprimirFacturas = document.querySelector('#btnImprimirFacturas');\r\n    if(btnImprimirFacturas){\r\n        const contenedorSwitch = document.querySelector('#switch');\r\n        const btnGenerarFacturas = document.querySelector('#btnGenerarFacturas');\r\n     \r\n        const btnEliminarFacturas  = document.querySelector('#btnEliminarFacturas');\r\n\r\n        btnEliminarFacturas.addEventListener('click',alertaEliminarFacturas)\r\n      \r\n\r\n        revisarGeneraAuto();\r\n\r\n        function alertaEliminarFacturas(){\r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    eliminarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function eliminarFacturas(){\r\n            try {\r\n                const respuesta = await fetch('/api/eliminar-facturas');\r\n                const resultado = await respuesta.json();\r\n             \r\n                Swal.fire({\r\n                    icon: resultado.type,\r\n        \r\n                    text: resultado.msg\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        btnImprimirFacturas.addEventListener('click',function(){\r\n            const url = '/api/facturas'\r\n            //const url = `${location.origin}/api/facturas`\r\n            window.open(url, '_blank');\r\n        })\r\n\r\n        function alertaGenerarFacturasAuto(){\r\n         \r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Generar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                     generarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function generarFacturas(){\r\n            btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n            btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n              \r\n            try {\r\n                const respuesta = await fetch(`/api/generar-facturas-manual`);\r\n    \r\n                const resultado = await respuesta.json()\r\n                console.log(resultado)\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n                    Swal.fire({\r\n                        icon: resultado.type,\r\n            \r\n                        text: resultado.msg\r\n                    })\r\n     \r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        async function cambiarEstadoAuto(estado){\r\n            let auto;\r\n            if(estado){\r\n                auto = 1;\r\n            }else{\r\n                auto = 0;\r\n            }\r\n\r\n\r\n\r\n      \r\n            const datos = new FormData();\r\n            datos.append('id',1)\r\n            datos.append('auto',auto);\r\n\r\n            const url = `/api/generar-auto`;\r\n           \r\n            try {\r\n                await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n          \r\n             \r\n                revisarGeneraAuto()\r\n            \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        async function revisarGeneraAuto(){\r\n\r\n\r\n         \r\n            try {\r\n                const respuesta = await fetch('/api/generar-auto');\r\n               \r\n                const resultado = await respuesta.json()\r\n               \r\n                const auto = resultado.auto;\r\n                generarCheckBox(auto);\r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n    \r\n        }\r\n\r\n        function generarCheckBox(auto){\r\n            const checkbox = document.createElement('INPUT')\r\n            checkbox.type=\"checkbox\"\r\n            checkbox.id = \"checkbox\";\r\n        \r\n            if(btnGenerarFacturas.classList.contains('inicio__boton-generar--inactivo')){\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo')\r\n            }\r\n            if(auto==1){\r\n                checkbox.checked = true\r\n                btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n\r\n                \r\n            }else{\r\n                checkbox.checked = false\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n            \r\n            }\r\n            checkbox.onchange = function(){\r\n                setTimeout(()=>{\r\n                    cambiarEstadoAuto(checkbox.checked)\r\n                },300)\r\n                \r\n            }\r\n            \r\n            const slider = document.createElement('DIV')\r\n \r\n            slider.classList.add('slider', 'round');\r\n            contenedorSwitch.appendChild(checkbox)\r\n            contenedorSwitch.appendChild(slider)\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n","(function(){\r\n    document.addEventListener(\"DOMContentLoaded\", function(){\r\n        const caja = document.querySelector('#cajas');\r\n    if(caja){\r\n        const subscriptores = document.querySelector('#subscriptores');\r\n        const subscriptoresVigentes = document.querySelector('#subscriptoresVigentes');\r\n        const subscriptoresInactivos = document.querySelector('#subscriptoresInactivos');\r\n        const pagosVigentes = document.querySelector('#pagosVigentes');\r\n        const fecha = document.querySelector('#fecha');\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const ingresosMensuales = document.querySelector('#ingresosMensuales');\r\n        const totalPagos = document.querySelector('#totalPagos');\r\n        const selectYear = document.querySelector('#year');\r\n        const selectMes = document.querySelector('#mes');\r\n\r\n        //selects para la consignacion\r\n        const selectYearConsignacion = document.querySelector('#year_consignacion')\r\n        const selectMesConsignacion = document.querySelector('#mes_consignacion')\r\n\r\n\r\n        const consignacionAseo = document.querySelector('#consignacionAseo')\r\n        const consignacionAlc = document.querySelector('#consignacionAlc')\r\n        const consignacionAcu = document.querySelector('#consignacionAcu')\r\n\r\n        const contenedor_estratos = document.querySelector('#estratos');\r\n        const btnImprimirFacturasFiltradas = document.querySelector('#btnImprimirFacturasFiltradas');\r\n\r\n\r\n        \r\n\r\n        selectYear.addEventListener('change',leerInputs);\r\n        selectMes.addEventListener('change',leerInputs);\r\n\r\n        selectYearConsignacion.addEventListener('change',leerInputsConsignacion);\r\n        selectMesConsignacion.addEventListener('change',leerInputsConsignacion);\r\n\r\n\r\n\r\n        informacionUsuario();\r\n        fechaActual();\r\n        leerInputs();\r\n        consultarEstratos();\r\n\r\n\r\n        btnImprimirFacturasFiltradas.addEventListener('click',function(e){\r\n            const estratoId = contenedor_estratos.value;\r\n            if(estratoId==0){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n        \r\n                    text: 'Porfavor seleccione un estrato'\r\n                })\r\n            }else{\r\n                const url = `/api/facturas?estratos-key=${btoa(estratoId)}`\r\n                //const url = `${location.origin}/api/facturas`\r\n                window.open(url, '_blank');\r\n            }\r\n        })\r\n\r\n        fecha.addEventListener('change',function(e){\r\n            const fechaSeleccionada = e.target.value;\r\n            consultarIngresosFecha(fechaSeleccionada)\r\n        })\r\n     \r\n        async function consultarEstratos(){\r\n            const url = `${location.origin}/api/estratos-all`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarEstratos(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarEstratos(estratos){\r\n     \r\n            estratos.forEach(estrato => {\r\n                const option = document.createElement('OPTION');\r\n                option.value=estrato.id\r\n                option.textContent = estrato.estrato\r\n                contenedor_estratos.appendChild(option)\r\n            });\r\n        }\r\n\r\n        function leerInputs(){\r\n            const year = selectYear.value;\r\n            const mes = selectMes.value;\r\n            const fecha = year+\"-\"+mes;\r\n            consultarIngresosMensuales(fecha);\r\n        }\r\n        function leerInputsConsignacion(){\r\n            const year = selectYearConsignacion.value;\r\n            const mes = selectMesConsignacion.value;\r\n            const fecha = year+\"-\"+mes;\r\n      \r\n       \r\n            consultarConsignaciones(fecha);\r\n        }\r\n\r\n        async function consultarIngresosMensuales(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/ingresos-mensuales';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                ingresosMensuales.textContent = '$'+resultado;\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        async function consultarConsignaciones(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/consignaciones';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n               \r\n                imprimirDatosConsignacion(resultado);\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function imprimirDatosConsignacion(resultado){\r\n            consignacionAseo.textContent = '';\r\n            consignacionAcu.textContent = '';\r\n            consignacionAlc.textContent = '';\r\n            consignacionAseo.textContent = '$'+(resultado.aseo||0);\r\n            consignacionAcu.textContent = '$'+(resultado.acueducto || 0);\r\n            consignacionAlc.textContent = '$'+(resultado.alcantarillado || 0);\r\n        }\r\n\r\n        async function informacionUsuario(){\r\n            try {\r\n                const respuesta = await fetch('/api/inicio/registrados');\r\n                const resultado = await respuesta.json();\r\n                mostrarResultados(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostrarResultados(resultado){\r\n            \r\n            const {registrados, registrados_activos, registrados_inactivos, pagos_vigentes, ingresos} = resultado;\r\n            subscriptores.textContent = registrados;\r\n            subscriptoresVigentes.textContent = registrados_activos;\r\n            subscriptoresInactivos.textContent = registrados_inactivos;\r\n            pagosVigentes.textContent = pagos_vigentes;\r\n            totalPagos.textContent = '$'+ingresos\r\n\r\n        }\r\n        \r\n\r\n        function fechaActual(){\r\n            const fechaActual = new Date().toISOString().slice(0, 10);\r\n            fecha.value = fechaActual;\r\n            consultarIngresosFecha(fechaActual);\r\n        }\r\n        async function consultarIngresosFecha(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n       \r\n            try {\r\n                const respuesta = await fetch('/api/inicio/fecha', {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                mostrarIngresos(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function mostrarIngresos(resultado){\r\n            ingreso.textContent = '$'+resultado\r\n        }\r\n        \r\n    }\r\n    })\r\n    \r\n\r\n})();","(function(){\r\n    const emitidasPendientes = document.querySelector('#tablaEmitidasPendientes');\r\n    if(emitidasPendientes){\r\n      \r\n        let tablaEmitidasPendientesData;\r\n        mostrarEmitidasPendientes();\r\n        \r\n        $('#tablaEmitidasPendientes').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarFactura($(this).attr('data-numero-factura'))\r\n        });\r\n        \r\n      function previsualizarFactura(numero_factura){\r\n        const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n        // Abre la URL en una nueva pestaña\r\n        window.open(url, '_blank');\r\n      }\r\n\r\n        function mostrarEmitidasPendientes(){\r\n      \r\n            $(\"#tablaEmitidasPendientes\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEmitidasPendientesData = $('#tablaEmitidasPendientes').DataTable({\r\n                ajax: '/api/emitidas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/emitidas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n    const estrato = document.querySelector('#estrato');\r\n    if(estrato){\r\n\r\n        /* Selectores */\r\n        const tarifaPlenaInput= document.querySelector('#tarifa_plena');\r\n        const porcentajeSubsidioInput = document.querySelector('#porcentaje_subsidio');\r\n        const subsidioInput= document.querySelector('#subsidio') ;\r\n        const copagoInput = document.querySelector('#copago')\r\n\r\n        const porcentajeAcuInput= document.querySelector('#porcentaje_acu');\r\n        const subsidioAcuInput= document.querySelector('#subsidio_acu') ;\r\n        const copagoAcuInput = document.querySelector('#copago_acu');\r\n        const totalAcuInput = document.querySelector('#tarifa_plena_acu')\r\n\r\n        const porcentajeAlcInput = document.querySelector('#porcentaje_alc');\r\n        const subsidioAlcInput= document.querySelector('#subsidio_alc') ;\r\n        const copagoAlcInput = document.querySelector('#copago_alc');\r\n        const totalAlcInput = document.querySelector('#tarifa_plena_alc')\r\n        \r\n\r\n        const porcentajeAseoInput = document.querySelector('#porcentaje_aseo');\r\n        const subsidioAseoInput= document.querySelector('#subsidio_aseo') ;\r\n        const copagoAseoInput = document.querySelector('#copago_aseo');\r\n        const totalAseoInput = document.querySelector('#tarifa_plena_aseo')\r\n\r\n        const ajusteInput = document.querySelector('#ajuste');\r\n        const porcentajeAjusteInput = document.querySelector('#porcentaje_ajuste');\r\n\r\n        /* Eventos */\r\n\r\n        tarifaPlenaInput.addEventListener('input',function(e){\r\n            formaterValor(e);\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n        porcentajeSubsidioInput.addEventListener('input',function(e){\r\n            const porcentaje = parseFloat(e.target.value)\r\n            if(porcentaje<0 || porcentaje>100){\r\n              \r\n                e.target.value = '';\r\n            }\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n\r\n        porcentajeAcuInput.addEventListener('input',function(e){\r\n        \r\n          \r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n          \r\n            const porcentaje = (e.target.value)/100;\r\n     \r\n            calcularDatos(porcentaje,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n          \r\n          \r\n        })\r\n        porcentajeAlcInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n    \r\n          \r\n        })\r\n        porcentajeAseoInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n          \r\n        })\r\n\r\n\r\n\r\n\r\n        porcentajeAjusteInput.addEventListener('input',calcularValorAjuste)\r\n        \r\n        ajusteInput.addEventListener('input',function(e){\r\n            calcularPorcentajeAjuste()\r\n            formaterValor(e);\r\n         \r\n          \r\n        })\r\n\r\n        /* Funciones */\r\n\r\n        function formaterValor(e){\r\n            const tarifa_plena = e.target.value;\r\n            let tarifa_plena_sin_formato = parseFloat(tarifa_plena.replace(/,/g, ''));\r\n            if(isNaN(tarifa_plena_sin_formato)){\r\n                tarifa_plena_sin_formato = '';\r\n            }\r\n            const tarifa_plena_formateada =  tarifa_plena_sin_formato.toLocaleString('en');\r\n            e.target.value = tarifa_plena_formateada ;\r\n        }\r\n\r\n        function calcularValorAjuste(){\r\n\r\n            if(((porcentajeAjusteInput.value)*1)<0 || ((porcentajeAjusteInput.value)*1)>100){\r\n                porcentajeAjusteInput.value = '';\r\n            }\r\n            if(copagoInput.value!='' && porcentajeAjusteInput.value !='' && copagoInput.value!=0){\r\n                const copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n                const ajuste = ((porcentajeAjusteInput.value/100)*copago).toFixed(2);\r\n                ajusteInput.value = (parseFloat(ajuste)).toLocaleString('en');\r\n \r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n        }\r\n    \r\n        function calcularPorcentajeAjuste(){\r\n      \r\n            if(copagoInput.value!='' && ajusteInput.value !='' && copagoInput.value!=0){\r\n                const valor_ajuste = parseFloat(ajusteInput.value.replace(/,/g, ''));\r\n                const valor_copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n\r\n                if(valor_ajuste>valor_copago){\r\n                    ajusteInput.value = '';\r\n                    porcentajeAjusteInput.value = '';\r\n                    return;\r\n                }\r\n\r\n                const porcentaje_ajuste = (((valor_ajuste*100)/valor_copago).toFixed(2))*1;\r\n                porcentajeAjusteInput.value = porcentaje_ajuste;\r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        function revisarValores(){\r\n\r\n   \r\n           \r\n            calcularDatos(porcentajeAcuInput.value/100,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n            calcularDatos(porcentajeAlcInput.value/100,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n            calcularDatos(porcentajeAseoInput.value/100,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n     \r\n        }\r\n     \r\n        function calcularDatos(porcentaje,subsidioInputRef, copagoInputRef,totalInputRef){\r\n         \r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n            const porcentaje_subsidio = (porcentajeSubsidioInput.value)/100;\r\n        \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0 && porcentaje >=0){\r\n              \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n            \r\n                const subsidio = tarifa_plena*porcentaje_subsidio*porcentaje;\r\n                const copago = (((tarifa_plena*(1-porcentaje_subsidio))*porcentaje).toFixed(2))*1;\r\n                const totalValor = tarifa_plena*porcentaje;\r\n                const total = totalValor.toLocaleString('en');\r\n              \r\n                insertarDatos(subsidio, copago, subsidioInputRef, copagoInputRef,totalInputRef,total);\r\n            }else{\r\n                subsidioInputRef.value=0;\r\n                copagoInputRef.value=0;\r\n                totalInputRef.value=0;\r\n            }\r\n\r\n        }\r\n\r\n       \r\n\r\n        function calcularSubsidioCopago(){\r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n\r\n            const porcentaje_subsidio = parseFloat((porcentajeSubsidioInput.value)/100);\r\n            \r\n          \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0){\r\n               \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n                const subsidio = tarifa_plena*porcentaje_subsidio;\r\n                const copago = ((tarifa_plena*(1-porcentaje_subsidio)).toFixed(2))*1;\r\n          \r\n                insertarDatos(subsidio, copago, subsidioInput, copagoInput);\r\n            }else{\r\n              \r\n                subsidioInput.value = '' ;\r\n                copagoInput.value = '';\r\n            }\r\n        }\r\n\r\n        function insertarDatos(subsidio, copago, referencia1, referencia2, referencia3=[] , total= ''){\r\n            if(total!=''){\r\n               referencia3.value = total;\r\n            }\r\n            const valor_subsidio = subsidio.toLocaleString('en');\r\n            const valor_copago = copago.toLocaleString('en');\r\n            referencia1.value = valor_subsidio\r\n            referencia2.value = valor_copago\r\n           \r\n        }\r\n        \r\n    }\r\n})();","\r\n(function(){\r\n\r\n\r\n    const tablaEstratos = document.querySelector('#tablaEstratos');\r\n\r\n    if(tablaEstratos){\r\n\r\n        $('#tablaEstratos').on('click', '#btn_eliminar_estrato', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarEstrato(e);\r\n        });\r\n\r\n        let tablaEstratosData;\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaEstratosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            const btnsInfo = document.querySelectorAll('#btn_info_estrato');\r\n            \r\n            btnsInfo.forEach(btnInfo=>{\r\n                btnInfo.addEventListener('click', function(e){\r\n                  \r\n                    infoEstrato(e);\r\n                })\r\n            })\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_estrato');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n             \r\n                    eliminarEstrato(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n      \r\n\r\n        async function infoEstrato(e){\r\n            const id = e.currentTarget.dataset.estratoId;\r\n            const url = `/api/estratos/info?id=${id}`;\r\n  \r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n\r\n        function mostrarInfo(resultado){\r\n  \r\n\r\n            const modal = document.createElement('DIV');\r\n            modal.classList.add('modal');\r\n            modal.innerHTML = `\r\n                <div class=\"modal__informacion\" id=\"info\">\r\n                    <h3>Información del Estrato </h3>\r\n                    \r\n                    <ul class=\"modal__lista\">\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                           \r\n                            <p class=\"modal__info\">Estrato: <span>${resultado.estrato}</span></p>\r\n                            <p class=\"modal__info\">Año Vigente: <span>${resultado.year}</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena: <span>${parseFloat((resultado.tarifa_plena)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Número de Facturas Vencidas: <span>${resultado.facturas_vencidas}</span></p>\r\n        \r\n                         </li>\r\n                   \r\n\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Subsidio: <span>${resultado.porcentaje_subsidio}%</span></p>\r\n                            <p class=\"modal__info\">Porcentaje Copago: <span>${resultado.porcentaje_copago}%</span></p>\r\n                            <p class=\"modal__info\">Subsidio: <span>${parseFloat((resultado.subsidio)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Copago: <span>${parseFloat((resultado.copago)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                        \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Acueducto: <span>${parseFloat((resultado.porcentaje_acu)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Acueducto: <span>${parseFloat((resultado.tarifa_plena_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Acueducto: <span>${parseFloat((resultado.subsidio_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Acueducto : <span>${parseFloat((resultado.copago_acu)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Alcantarillado: <span>${parseFloat((resultado.porcentaje_alc)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Alcantarillado: <span>${parseFloat((resultado.tarifa_plena_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Alcantarillado: <span>${parseFloat((resultado.subsidio_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Alcantarillado : <span>${parseFloat((resultado.copago_alc)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Aseo: <span>${parseFloat((resultado.porcentaje_aseo)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Aseo: <span>${parseFloat((resultado.tarifa_plena_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Aseo: <span>${parseFloat((resultado.subsidio_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Aseo : <span>${parseFloat((resultado.copago_aseo)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Ajuste: <span>${parseFloat((resultado.porcentaje_ajuste)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Ajuste: <span>${parseFloat((resultado.ajuste)).toLocaleString('en')}</span></p>\r\n                           \r\n                         </li>\r\n                         \r\n                        \r\n                    </ul>\r\n\r\n                    <div class=\"modal__opciones\">\r\n                      \r\n             \r\n                      \r\n                        <button type=\"button\" class=\"modal__cerrar-modal\">Cerrar</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            `\r\n            setTimeout(()=>{\r\n                const info = document.querySelector('#info');\r\n                info.classList.add('modal__informacion--animar');\r\n            },10)\r\n            modal.addEventListener('click',function(e){\r\n                e.preventDefault();\r\n                if(e.target.classList.contains('modal__cerrar-modal')){\r\n                    const info = document.querySelector('#info');\r\n                    info.classList.add('modal__informacion--cerrar');\r\n                    setTimeout(()=>{\r\n                        modal.remove();\r\n                        \r\n                       \r\n                    },500)\r\n                }\r\n               \r\n           \r\n            })\r\n\r\n            document.querySelector('.dashboard__contenedor').appendChild(modal);\r\n        }\r\n\r\n        function eliminarEstrato(e){\r\n   \r\n            const estrato =e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            \r\n          \r\n            const id = e.currentTarget.dataset.estratoId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${estrato}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n      \r\n            url = `/api/estratos/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaEstratosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n \r\n        function mostrarEstratos(){\r\n      \r\n            $(\"#tablaEstratos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEstratosData = $('#tablaEstratos').DataTable({\r\n                ajax: '/api/estratos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/estratos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n})();\r\n","\r\n\r\n(function(){\r\n    const contenedorFactura = document.querySelector('#facturas');\r\n    if(contenedorFactura){\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n           \r\n            consultarFacturas();\r\n\r\n            async function consultarFacturas(){\r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    const url = '/api/facturas-registrado'\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const resultado = await respuesta.json();\r\n             \r\n                    if(resultado){\r\n                  \r\n                        imprimirDeuda(resultado.deuda);\r\n                        imprimirResultados(resultado.facturas);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            function imprimirDeuda(valorDeuda){\r\n                const deuda = document.querySelector('#deuda')\r\n                deuda.classList = [];\r\n                deuda.classList.add('deuda__valor')\r\n                if(valorDeuda==0){\r\n                    \r\n                    deuda.classList.add('deuda__valor--pagado')\r\n                }else{\r\n                    deuda.classList.add('deuda__valor--vencido')\r\n                }\r\n                deuda.textContent = `$ ${valorDeuda.toLocaleString('en')}`\r\n            }\r\n\r\n            function imprimirResultados(facturas){\r\n                \r\n\r\n                \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                facturas.forEach(factura => {\r\n  \r\n                    const {id, numero_factura, fecha_emision, periodo_fin, periodo_inicio, copago, pagado, ajuste, combinado, saldo_anterior} = factura\r\n                    const dateFechaActual = new Date();\r\n                    const mesActual = dateFechaActual.getMonth()+1;\r\n                 \r\n                    const arregloFecha = fecha_emision.split('-');\r\n                    const mesEmision = parseFloat(arregloFecha[1])\r\n                    \r\n                   \r\n                   const diferenciaFechas = mesActual - mesEmision;\r\n                    \r\n            \r\n                   \r\n                \r\n              \r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionFactura(e);\r\n                        informacionFactura(factura);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdEmitida = document.createElement('TD');\r\n                    tdEmitida.classList.add('table__td');\r\n                    tdEmitida.innerHTML = `<span class=\"table__span\">Emitida:&nbsp; </span>&nbsp; ${fecha_emision}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${parseFloat(montoTotal).toLocaleString('en')}`\r\n\r\n                    const tdEstado = document.createElement('TD');\r\n                    tdEstado.classList.add('table__td');\r\n                    if(diferenciaFechas>0 && pagado==0){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Impaga</span>`\r\n                    }else{\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--${ pagado== 1?'pagado':'impaga'}\">${pagado == 1?'Pagado':'Impaga'}</span>`\r\n                    \r\n                    }   \r\n                    if(combinado == 1){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Combinada</span>`\r\n                    }\r\n\r\n                     \r\n                   \r\n\r\n\r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdEmitida)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdEstado)\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorFactura.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionFactura(factura){\r\n                const {id, numero_factura, fecha_emision, estrato, periodo_inicio, periodo_fin, copago,ajuste, pagado, saldo_anterior, combinado} = factura;\r\n               \r\n           \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#actions')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                const accionesCliente = document.createElement('DIV');\r\n                accionesCliente.classList.add('registrado__datos');\r\n\r\n                const clienteLabel = document.createElement('SPAN');\r\n                clienteLabel.classList.add('registrado__label');\r\n                clienteLabel.textContent = 'Cliente'\r\n                \r\n                const clienteDato = document.createElement('P');\r\n                clienteDato.classList.add('registrado__dato');\r\n                clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesEstrato = document.createElement('DIV');\r\n                accionesEstrato.classList.add('registrado__datos');\r\n\r\n                \r\n                const estratoLabel = document.createElement('SPAN');\r\n                estratoLabel.classList.add('registrado__label');\r\n                estratoLabel.textContent = 'Estrato'\r\n                \r\n                const estratoDato = document.createElement('P');\r\n                estratoDato.classList.add('registrado__dato');\r\n                estratoDato.textContent = estrato\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n\r\n           \r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n\r\n                const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${montoTotal .toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                accionesCliente.appendChild(clienteLabel);\r\n                accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesEstrato.appendChild(estratoLabel);\r\n                accionesEstrato.appendChild(estratoDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n    \r\n                accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesEstrato);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarFactura(numero_factura);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n               \r\n\r\n                if(pagado==0 && combinado==0){\r\n                    const btnPagar =  document.createElement('SPAN');\r\n                    btnPagar.classList.add('actions__boton');\r\n                    btnPagar.textContent = 'Pago Efectivo';\r\n                    btnPagar.id = 'btnPagar';\r\n                   \r\n                    const btnBanco =  document.createElement('SPAN');\r\n                    btnBanco.classList.add('actions__boton');\r\n                    btnBanco.textContent = 'transferencia';\r\n                    btnBanco.id = 'btnBanco';\r\n\r\n                    btnPagar.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 1, btnPagar,btnBanco);\r\n                    }\r\n                    btnBanco.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 0, btnPagar,btnBanco);\r\n                    }\r\n    \r\n                 \r\n                    botonesContenedor.appendChild(btnPagar);\r\n                    botonesContenedor.appendChild(btnBanco);\r\n                }\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarFactura(numero_factura){\r\n               \r\n\r\n                const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n            function pagarFactura(factura, metodo, btnPagar,btnBanco){\r\n                const {id,copago, periodo_inicio, periodo_fin, numero_factura}  = factura;\r\n   \r\n\r\n                const registrado = document.createElement('DIV');\r\n                registrado.classList.add('registrado');\r\n\r\n                const metodoDatos = document.createElement('DIV');\r\n                metodoDatos.classList.add('registrado__datos');\r\n\r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo de Pago:'\r\n\r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato')\r\n                metodoDato.textContent = metodo==1?'Efectivo':'Transferencia';\r\n\r\n                const registradoDatos = document.createElement('DIV');\r\n                registradoDatos.classList.add('registrado__datos');\r\n\r\n                const registradoLabel = document.createElement('SPAN');\r\n                registradoLabel.classList.add('registrado__label');\r\n                registradoLabel.textContent = 'Cliente:'\r\n\r\n                const registradoDato = document.createElement('P');\r\n                registradoDato.classList.add('registrado__dato')\r\n                registradoDato.textContent = nombreCliente.textContent;\r\n\r\n                const periodoDatos = document.createElement('DIV');\r\n                periodoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo:'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const montoDatos = document.createElement('DIV');\r\n                montoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto: '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${(parseFloat(copago)).toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                \r\n\r\n                metodoDatos.appendChild(metodoLabel);\r\n                metodoDatos.appendChild(metodoDato);\r\n\r\n                registradoDatos.appendChild(registradoLabel);\r\n                registradoDatos.appendChild(registradoDato);\r\n            \r\n                periodoDatos.appendChild(periodoLabel)\r\n                periodoDatos.appendChild(periodoDato)\r\n\r\n                montoDatos.appendChild(montoLabel)\r\n                montoDatos.appendChild(montoDato)\r\n\r\n                registrado.appendChild(metodoDatos);\r\n                registrado.appendChild(registradoDatos);\r\n                registrado.appendChild(periodoDatos);\r\n                registrado.appendChild(montoDatos);\r\n\r\n               \r\n  \r\n\r\n                Swal.fire({\r\n                    title: `Confirme La información`,\r\n                    html: registrado,\r\n                    text:'Esta accion no se puede deshacer',\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                  }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        enviarInformacionPagar(id, metodo, btnPagar, btnBanco);\r\n                        \r\n                      //Swal.fire('Saved!', '', 'success')\r\n                    }else{\r\n                        btnPagar.style.display = 'block'\r\n                        btnBanco.style.display  = 'block'\r\n                    }\r\n                  })\r\n            }\r\n\r\n            async function enviarInformacionPagar(id, metodo, btnPagar, btnBanco){\r\n                //const url =  'http://localhost:3000/api/pagar'; //desarrollo\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                datos.append('metodo', metodo);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n            \r\n               \r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            \r\n                            text: resultado.mensaje\r\n                          })\r\n                    const body =  document.querySelector('body');\r\n                    const inputHidden = document.createElement(\"input\");\r\n                    inputHidden.type = \"hidden\"; \r\n                    inputHidden.id = \"confirmacionPago\"; \r\n                    body.appendChild(inputHidden);\r\n\r\n\r\n                        while(contenedorFactura.firstChild){\r\n                            contenedorFactura.removeChild(contenedorFactura.firstChild);\r\n                        }\r\n                     \r\n                        document.querySelector('#btnPagar').remove();\r\n                        consultarFacturas();\r\n                     \r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n  \r\n          \r\n\r\n\r\n\r\n            function seleccionFactura(e){\r\n\r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#actions')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n            \r\n       \r\n\r\n       \r\n        \r\n\r\n     }\r\n\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const tablaRegistrados = document.querySelector('#tablaRegistrados');\r\n \r\n    if(tablaRegistrados){\r\n\r\n        $('#tablaRegistrados').on('click', '#btn_eliminar_registrado', function(e) {\r\n            // Manejar el evento aquí\r\n            leerAccion(e);\r\n            // Resto del código\r\n        });\r\n       \r\n        let tablaRegistradosData;\r\n        mostrarRegistrados();\r\n        verificarCargaTabla();\r\n\r\n        function verificarCargaTabla(){\r\n            tablaRegistradosData.on('draw', eventosClickEditar);\r\n        }\r\n        function eventosClickEditar(){\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_registrado');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                    // const registradoId = e.currentTarget.dataset.registradoId;\r\n                    leerAccion(e);\r\n                })\r\n            })\r\n        }\r\n        // tablaRegistrados.addEventListener('click',function(e){\r\n        //     leerAccion(e);\r\n        // })\r\n        function leerAccion( e){\r\n       \r\n            if(e.currentTarget.id=='btn_eliminar_registrado'){\r\n                eliminarRegistrado( e);\r\n            }\r\n            \r\n        }\r\n        function eliminarRegistrado(e){\r\n            const registrado = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.registradoId;\r\n            \r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${registrado}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n      \r\n            url = `/api/registrados/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaRegistradosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n        function mostrarRegistrados(){\r\n            $(\"#tablaRegistrados\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaRegistradosData = $('#tablaRegistrados').DataTable({\r\n                ajax: '/api/registrados',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/registrados',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const contenedorPagado = document.querySelector('#pagos');\r\n    if(contenedorPagado){\r\n            let control = true;\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n            const actions = document.querySelector('#actions');\r\n            // actions.addEventListener('click',function(e){\r\n           \r\n            //     if(e.target.id=='btnPagar'){\r\n            //        const swal =  document.querySelector('.swal2-confirm')\r\n\r\n            //        swal.addEventListener('click',function(){\r\n            //             setTimeout(()=>{\r\n                         \r\n            //                 consultarPagos();\r\n            //             },2000)\r\n            //        })\r\n            //     }\r\n            // })\r\n\r\n           const body  =  document.querySelector('body');\r\n           body.addEventListener('click',function(){\r\n                const inputHidden = document.querySelector('#confirmacionPago')\r\n                if(inputHidden){\r\n                    consultarPagos();\r\n                  \r\n                }\r\n           })\r\n\r\n            \r\n           \r\n           \r\n            consultarPagos();\r\n    \r\n            \r\n      \r\n            async function consultarPagos(){\r\n                if(document.querySelector('#confirmacionPago')){\r\n                    document.querySelector('#confirmacionPago').remove()\r\n                }\r\n                \r\n            \r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    //const url = 'http://localhost:3000/api/pagos'//desarrollo \r\n                    const url = '/api/pagos' //produccion\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const pagos = await respuesta.json();\r\n                    \r\n                    if(pagos){\r\n                        \r\n                        imprimirResultados(pagos);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n\r\n            function imprimirResultados(pagos){\r\n\r\n                while(contenedorPagado.firstChild){\r\n                    contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                }\r\n             \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                pagos.forEach(pago => {\r\n  \r\n                    const {id, numero_factura, fecha_pago, periodo_fin, periodo_inicio, monto, numero_pago, estado} = pago\r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionarPago(e);\r\n                        informacionPago(pago);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdFechaPago = document.createElement('TD');\r\n                    tdFechaPago.classList.add('table__td');\r\n                    tdFechaPago.innerHTML = `<span class=\"table__span\">Fecha de Pago:&nbsp; </span>&nbsp; ${fecha_pago}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto}`\r\n\r\n                    const tdNumeroPago = document.createElement('TD');\r\n                    tdNumeroPago.classList.add('table__td');\r\n                    tdNumeroPago.innerHTML = ` <span class=\"table__span\">Pago #&nbsp; </span> ${numero_pago}`\r\n\r\n                    \r\n\r\n                   \r\n\r\n                \r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdFechaPago)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdNumeroPago)\r\n                    if(estado==0){\r\n                      \r\n                        const tdPagoAnulado = document.createElement('TD');\r\n                        tdPagoAnulado.classList.add('table__td');\r\n                        tdPagoAnulado.innerHTML = `<span class=\"table__boton table__boton--vencida\">Anulado</span>`\r\n                        tr.appendChild(tdPagoAnulado);\r\n                    }\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorPagado.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionPago(pago){\r\n                const {id, numero_factura,numero_pago, estrato, metodo, periodo_inicio, periodo_fin, monto, recaudador, factura_id} = pago;\r\n               \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#payments')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                // const accionesCliente = document.createElement('DIV');\r\n                // accionesCliente.classList.add('registrado__datos');\r\n\r\n                // const clienteLabel = document.createElement('SPAN');\r\n                // clienteLabel.classList.add('registrado__label');\r\n                // clienteLabel.textContent = 'Cliente'\r\n                \r\n                // const clienteDato = document.createElement('P');\r\n                // clienteDato.classList.add('registrado__dato');\r\n                // clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesRecaudador = document.createElement('DIV');\r\n                accionesRecaudador.classList.add('registrado__datos');\r\n\r\n                \r\n                const recaudadorLabel = document.createElement('SPAN');\r\n                recaudadorLabel.classList.add('registrado__label');\r\n                recaudadorLabel.textContent = 'Recaudador'\r\n                \r\n                const recaudadorDato = document.createElement('P');\r\n                recaudadorDato.classList.add('registrado__dato');\r\n                recaudadorDato.textContent = recaudador\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${monto}`;\r\n\r\n                /* comprobante */\r\n                const accionesMetodo = document.createElement('DIV');\r\n                accionesMetodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo '\r\n                \r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato');\r\n                metodoDato.textContent =metodo == 1?'Efectivo':  'Transferencia';\r\n                \r\n\r\n                \r\n\r\n                // accionesCliente.appendChild(clienteLabel);\r\n                // accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesRecaudador.appendChild(recaudadorLabel);\r\n                accionesRecaudador.appendChild(recaudadorDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n\r\n                accionesMetodo.appendChild(metodoLabel);\r\n                accionesMetodo.appendChild(metodoDato);\r\n    \r\n                // accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesRecaudador);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n                accionesContenedor.appendChild(accionesMetodo);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarComprobante(factura_id);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n              \r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarComprobante(factura_id){\r\n               \r\n\r\n                const url =`/api/previsualizar-pago?key=${btoa(factura_id)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n           \r\n            async function enviarInformacionPagar(id){\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                          \r\n                            text: resultado.mensaje\r\n                          })\r\n                        while(contenedorPagado.firstChild){\r\n                            contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                        }\r\n                       \r\n                     \r\n                      \r\n                        consultarPagos();\r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n   \r\n          \r\n\r\n\r\n\r\n            function seleccionarPago(e){\r\n                \r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#payments')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n\r\n\r\n\r\n     }\r\n    \r\n\r\n})();\r\n\r\n","(function(){\r\n    const tablaPagos = document.querySelector('#tablaPagos');\r\n    if(tablaPagos){\r\n\r\n   \r\n        let tablaPagosData;\r\n        mostraroPagos();\r\n\r\n        $('#tablaPagos').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarPago($(this).attr('data-numero-pago'))\r\n        });\r\n        $('#tablaPagos').on('click', '#btn_anular', function(e) {\r\n            // Manejar el evento aquí\r\n            eliminarPagoAlerta($(this).attr('data-numero-pago'));\r\n            // Resto del código\r\n        });\r\n\r\n        \r\n      \r\n        \r\n      \r\n        function previsualizarPago(numero_pago){\r\n            const url =`/api/previsualizar-pago?key=${btoa(numero_pago)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n        }\r\n        function eliminarPagoAlerta(numero_pago){\r\n                  \r\n            Swal.fire({\r\n                title: `Esta seguro que desea anular el pago # ${numero_pago}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    anularPago(numero_pago);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function anularPago(numero_pago){\r\n            const datos = new FormData();\r\n            datos.append('numero_pago', numero_pago);\r\n            \r\n            \r\n            const url = '/api/anular-pago';\r\n            try {\r\n                const respuesta = await  fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaPagosData.ajax.reload(); \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostraroPagos(){\r\n      \r\n            $(\"#tablaPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaPagosData = $('#tablaPagos').DataTable({\r\n                ajax: '/api/lista-pagos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/lista-pagos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","\r\n\r\n(function(){\r\n    const contenedorPagar  = document.querySelector('#contenedorPagar');\r\n    if(contenedorPagar){\r\n        const inputCodigo = document.querySelector('#numero_factura');\r\n        const contenedorFacturas = document.querySelector('#pagarFacturas');\r\n        const guardarPagosBtn = document.querySelector('#guardarPagos');\r\n        const totalFacturas = document.querySelector('#totalFacturas');\r\n        const totalRecaudo = document.querySelector('#totalRecaudo');\r\n\r\n        let facturas;\r\n        let arreglofacturas = []\r\n        consultarFacturas()\r\n        guardarPagosBtn.addEventListener('click', confirmarPagos);\r\n\r\n        async function guardarPagos(){\r\n            const datos = new FormData();\r\n        \r\n            const arregloPagos = arreglofacturas.map(factura => factura.id);\r\n          \r\n            datos.append('pagos', JSON.stringify(arregloPagos));\r\n            try {\r\n                const respuesta = await fetch('/api/subir-pagos', {\r\n                    body:datos,\r\n                    method:'POST'\r\n                }) \r\n                const resultado = await respuesta.json();\r\n                if(resultado.tipo == 'error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops',\r\n                        text: resultado.mensaje\r\n                      })\r\n                }else{\r\n                    limpiarHtml();\r\n                    totalFacturas.textContent = 0;\r\n                    totalRecaudo.textContent = '$0'\r\n                    arreglofacturas = [];\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        \r\n                        text: resultado.mensaje\r\n                      })\r\n                  \r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n       function confirmarPagos(){\r\n            if(arreglofacturas.length>0){\r\n                Swal.fire({\r\n                    title: `Esta seguro que desea subir ${ totalFacturas.textContent} Pagos por ${ totalRecaudo.textContent}`,\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                  }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        guardarPagos();\r\n                        \r\n                      //Swal.fire('Saved!', '', 'success')\r\n                    }\r\n                  })\r\n            }else{\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Debe agregar al menos una factura',\r\n                    'error'\r\n                )\r\n            }\r\n       }\r\n\r\n\r\n        function infoFactura(facturaEncontrada){\r\n      \r\n            if(arreglofacturas.find(factura => factura.id=== facturaEncontrada.id)){\r\n                setTimeout(()=>{\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ya fue agregada a la fila de pagos',\r\n                        'error'\r\n                      )\r\n                    return;\r\n                },1)\r\n               \r\n            }else   if(facturaEncontrada.pagado == 1){\r\n                setTimeout(()=>{\r\n                Swal.fire(\r\n                    'Error',\r\n                    'La Factura ya ha sido cancelada',\r\n                    'error'\r\n                  )\r\n                return;\r\n            },1)\r\n                    \r\n            }else   if(facturaEncontrada.combinado == 1){\r\n                setTimeout(()=>{\r\n                Swal.fire(\r\n                    'Error',\r\n                    'La Factura ha sido combinada',\r\n                    'error'\r\n                )\r\n                return;\r\n            },1)\r\n            }else{\r\n                Swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'Factura agregada a la pila',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n             \r\n                const {id, numero_factura, registrado_nombre, estrato, mes_facturado,copago,ajuste,saldo_anterior } = facturaEncontrada;\r\n                arreglofacturas.unshift({\r\n                    numero_factura:numero_factura,\r\n                    subscriptor:registrado_nombre,\r\n                    estrato:estrato,\r\n                    mes_facturado:mes_facturado,\r\n                    copago:copago,\r\n                    ajuste:ajuste,\r\n                    saldo_anterior:saldo_anterior,\r\n                    id:id\r\n                \r\n    \r\n                })\r\n    \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n            \r\n                limpiarHtml();\r\n                let recaudo = 0;\r\n                let cantidadFacturas = 0;\r\n                arreglofacturas.forEach(factura=>{\r\n              \r\n                    const { numero_factura, subscriptor, estrato, mes_facturado,copago, ajuste, saldo_anterior} = factura;\r\n            \r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n    \r\n                    const tdRegistrado = document.createElement('TD');\r\n                    tdRegistrado.classList.add('table__td');\r\n                    tdRegistrado.innerHTML = `<span class=\"table__span\">Cliente:&nbsp; </span>&nbsp; ${subscriptor}`;\r\n    \r\n                    const tdEstrato = document.createElement('TD');\r\n                    tdEstrato.classList.add('table__td');\r\n                    tdEstrato.innerHTML = `<span class=\"table__span\">Estrato:&nbsp; </span>&nbsp; ${estrato}`\r\n    \r\n                    const tdMesFacturado = document.createElement('TD');\r\n                    tdMesFacturado.classList.add('table__td');\r\n                    tdMesFacturado.innerHTML = `<span class=\"table__span\">Mes Facturado:&nbsp; </span>&nbsp; ${mes_facturado}`\r\n    \r\n                    let monto = parseFloat(copago)+ parseFloat(saldo_anterior)- parseFloat(ajuste)\r\n                  \r\n                    const tdCopago = document.createElement('TD');\r\n                    tdCopago.classList.add('table__td');\r\n                    tdCopago.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto.toLocaleString('en')}`\r\n    \r\n                    \r\n                   \r\n    \r\n    \r\n    \r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdRegistrado)\r\n                    tr.appendChild(tdEstrato)\r\n                    tr.appendChild(tdMesFacturado)\r\n                    tr.appendChild(tdCopago)\r\n                    tabla.appendChild(tr);\r\n                    recaudo = recaudo + monto;\r\n                    cantidadFacturas = cantidadFacturas +1;\r\n\r\n                })\r\n\r\n                totalFacturas.textContent = cantidadFacturas\r\n                totalRecaudo.textContent = '$'+recaudo.toLocaleString('en')\r\n    \r\n                contenedorFacturas.appendChild(tabla)\r\n\r\n            }\r\n          \r\n          \r\n           \r\n            \r\n        }\r\n\r\n\r\n\r\n        function consultarFactura(e){\r\n            const numero_factura = e.target.value\r\n           \r\n         \r\n            const facturaEncontrada = facturas.find(factura => factura.numero_factura === numero_factura);\r\n            if (facturaEncontrada) {\r\n                inputCodigo.value='';\r\n                infoFactura(facturaEncontrada);\r\n            } \r\n        }\r\n        \r\n        function agregarEventos(){\r\n         \r\n            inputCodigo.addEventListener('input',function(e){\r\n             \r\n            \r\n                consultarFactura(e);\r\n            })\r\n        }\r\n        \r\n\r\n\r\n        async function consultarFacturas(){\r\n            try {\r\n                const resultado = await fetch('/api/facturas-por-pagar');\r\n                const respuesta = await resultado.json();\r\n                facturas = respuesta;\r\n             \r\n              \r\n                agregarEventos();\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n       \r\n        function limpiarHtml(){\r\n            while(contenedorFacturas.firstChild){\r\n                contenedorFacturas.removeChild(contenedorFacturas.firstChild)\r\n            }\r\n        }\r\n\r\n    \r\n    }\r\n\r\n\r\n})();","\r\n(function(){\r\n   \r\n\r\n    \r\n    const tablaUsuarios = document.querySelector('#tablaUsuarios');\r\n    if(tablaUsuarios){\r\n        let tablaUsuariosData;\r\n        tablaUsuarios.addEventListener('click',function(e){\r\n            leerAccion(e);\r\n        })\r\n\r\n        $('#tablaUsuarios').on('click', '#btn_eliminar_usuario', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarUsuario(e);\r\n        });\r\n    \r\n        \r\n\r\n        mostrarUsuarios();\r\n\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaUsuariosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            \r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_usuario');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n                    \r\n                   eliminarUsuario(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n        function leerAccion(e){\r\n        \r\n            // if(e.target.id=='btn_eliminar_usuario'){\r\n            //     eliminarUsuario(e);\r\n            // }\r\n            if(e.target.id=='btn_cambiar_estado'){\r\n                editarEstado(e);\r\n            }\r\n        }\r\n        function eliminarUsuario(e){\r\n            const nombre = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.usuarioId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar a  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n           \r\n            url = `/api/usuarios/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n              \r\n             \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function editarEstado(e){\r\n           \r\n            const estadoActual = e.target.dataset.estadoActual;\r\n            const nombre = e.target.parentNode.parentNode.children[1].textContent;\r\n            const id = e.target.dataset.usuarioId;\r\n\r\n            let mensajeAlerta = '';\r\n        \r\n            if(estadoActual == 1){\r\n                mensajeAlerta = 'Esta seguro que desea desactivar a';\r\n            }else{\r\n                mensajeAlerta = 'Esta seguro que desea activar a';\r\n            }\r\n        \r\n            \r\n            Swal.fire({\r\n                title: `${mensajeAlerta}  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEstado(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n\r\n        async function enviarInformacionEstado(id){\r\n            url = `/api/usuarios/editar-estado?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n           \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    title: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarUsuarios(){\r\n            $(\"#tablaUsuarios\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuariosData = $('#tablaUsuarios').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n        }\r\n       \r\n    \r\n\r\n    }  \r\n        \r\n   \r\n\r\n \r\n \r\n\r\n\r\n  \r\n})();"]}