{"version":3,"sources":["desabilitarBtnSubmit.js","redireccion.js","dashboard/facturas.js","dashboard/inicio.js","cajas/abrir.js","cajas/cajasPagos.js","cajas/index.js","emitidas/index.js","pagar/index.js","pagar/pagar.js","registrados/facturas.js","registrados/index.js","registrados/pagos.js","estratos/crear.js","estratos/index.js","usuarios/index.js"],"names":["document","querySelector","btnSubmit","addEventListener","e","setTimeout","target","disabled","classList","add","alertaExitoFormulario","formulario","style","display","remove","urlActual","window","location","href","includes","redireccionar","btnImprimirFacturas","contenedorSwitch","btnGenerarFacturas","alertaGenerarFacturasAuto","Swal","fire","title","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","async","removeEventListener","respuesta","fetch","resultado","json","console","log","icon","type","text","msg","error","generarFacturas","revisarGeneraAuto","auto","checkbox","createElement","id","contains","checked","onchange","estado","datos","FormData","append","body","method","cambiarEstadoAuto","slider","appendChild","generarCheckBox","eliminarFacturas","open","subscriptores","subscriptoresVigentes","subscriptoresInactivos","pagosVigentes","fecha","ingreso","ingresosMensuales","totalPagos","totalConsignaciones","selectYear","selectMes","selectYearConsignacion","selectMesConsignacion","consignacionAseo","consignacionAlc","consignacionAcu","total_del_mes","ya_consignado","a_consginar","contenedor_estratos","btnImprimirFacturasFiltradas","leerInputs","textContent","consultarIngresosMensuales","value","leerInputsConsignacion","aseo","acueducto","alcantarillado","a_consignar","imprimirDatosConsignacion","consultarConsignaciones","consultarIngresosFecha","mostrarIngresos","registrados","registrados_activos","registrados_inactivos","pagos_vigentes","ingresos","consignaciones","mostrarResultados","informacionUsuario","fechaActual","Date","toISOString","slice","url","origin","forEach","estrato","option","consultarEstratos","estratoId","btoa","efectivo_inicial","efectivo_inicial_sin_formato","parseFloat","replace","isNaN","efectivo_inicial_formateada","toLocaleString","formaterValor","tablaCajasPagos","URL","URLSearchParams","search","get","Number","isInteger","parseInt","$","dataTable","fnDestroy","DataTable","ajax","deferRender","retrieve","proccesing","responsive","tablaCajasData","alertaCierre","tipo","mensaje","reload","cerrarCaja","on","this","data","estadoCaja","dataset","cajaId","tablaEmitidasPendientesData","numero_factura","previsualizarFactura","attr","tablaPagosData","numero_pago","previsualizarPago","anularPago","inputCodigo","contenedorFacturas","guardarPagosBtn","totalFacturas","totalRecaudo","facturas","arreglofacturas","limpiarHtml","firstChild","removeChild","facturaEncontrada","find","factura","pagado","combinado","position","showConfirmButton","timer","registrado_nombre","mes_facturado","copago","ajuste","saldo_anterior","unshift","subscriptor","tabla","recaudo","cantidadFacturas","tr","tdNumeroFactura","tdRegistrado","innerHTML","tdEstrato","tdMesFacturado","monto","tdCopago","infoFactura","consultarFactura","consultarFacturas","length","arregloPagos","map","JSON","stringify","guardarPagos","contenedorFactura","nombreCliente","valorDeuda","deuda","imprimirDeuda","fecha_emision","periodo_fin","periodo_inicio","mesActual","getMonth","arregloFecha","split","diferenciaFechas","onclick","seleccionAnterior","currentTarget","seleccionFactura","acciones","accionesContenedor","accionesCliente","clienteLabel","clienteDato","accionesEstrato","estratoLabel","estratoDato","accionesPeriodo","periodoLabel","periodoDato","accionesMonto","montoLabel","montoTotal","montoDato","botonesContenedor","btnVerFactura","btnPagar","btnBanco","pagarFactura","informacionFactura","tdEmitida","tdPeriodo","tdMonto","tdEstado","imprimirResultados","metodo","registrado","metodoDatos","metodoLabel","metodoDato","registradoDatos","registradoLabel","registradoDato","periodoDatos","montoDatos","html","inputHidden","enviarInformacionPagar","tablaRegistradosData","eventosClickEditar","querySelectorAll","btnEliminar","leerAccion","parentNode","children","registradoId","enviarInformacionEliminar","eliminarRegistrado","contenedorPagado","consultarPagos","pagos","pago","fecha_pago","seleccionarPago","recaudador","factura_id","accionesRecaudador","recaudadorLabel","recaudadorDato","accionesMetodo","previsualizarComprobante","informacionPago","tdFechaPago","tdNumeroPago","tdPagoAnulado","tarifaPlenaInput","porcentajeSubsidioInput","subsidioInput","copagoInput","porcentajeAcuInput","subsidioAcuInput","copagoAcuInput","totalAcuInput","porcentajeAlcInput","subsidioAlcInput","copagoAlcInput","totalAlcInput","porcentajeAseoInput","subsidioAseoInput","copagoAseoInput","totalAseoInput","ajusteInput","porcentajeAjusteInput","tarifa_plena","tarifa_plena_sin_formato","tarifa_plena_formateada","revisarValores","calcularDatos","porcentaje","subsidioInputRef","copagoInputRef","totalInputRef","porcentaje_subsidio","insertarDatos","toFixed","calcularSubsidioCopago","subsidio","referencia1","referencia2","referencia3","total","valor_subsidio","valor_copago","valor_ajuste","porcentaje_ajuste","calcularPorcentajeAjuste","tablaEstratosData","eventosClick","btnInfo","modal","year","facturas_vencidas","porcentaje_copago","preventDefault","mostrarInfo","infoEstrato","eliminarEstrato","tablaUsuarios","tablaUsuariosData","eliminarUsuario","nombre","usuarioId","estadoActual","mensajeAlerta","enviarInformacionEstado","editarEstado"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n\r\n(function(){\r\n \r\n    const formulario =  document.querySelector('.formulario');\r\n\r\n    if(formulario){\r\n        \r\n        const btnSubmit = document.querySelector('.formulario [type=\"submit\"]');\r\n        if(btnSubmit){\r\n            btnSubmit.addEventListener('click',deshabilitarBoton);\r\n        }\r\n        \r\n       \r\n        function deshabilitarBoton(e){\r\n            setTimeout(()=>{\r\n                e.target.disabled = true;\r\n                e.target.classList.add('formulario__submit--deshabilitado');\r\n            },0)\r\n           \r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n    const alertaExitoFormulario = document.querySelector('.alerta__exito');\r\n    const formulario = document.querySelector('.formulario');\r\n    if(alertaExitoFormulario){\r\n        formulario.style.display='none';\r\n        setTimeout(()=>{\r\n            alertaExitoFormulario.remove();\r\n            redireccionar();\r\n\r\n        },3000);\r\n\r\n        function redireccionar(){\r\n            const urlActual = window.location.href;\r\n            if(urlActual.includes('/admin/usuarios/')){\r\n                window.location.href = '/admin/usuarios';\r\n            }\r\n            if(urlActual.includes('/admin/estratos/')){\r\n                window.location.href = '/admin/estratos';\r\n            }\r\n            if(urlActual.includes('/admin/registrados/')){\r\n                window.location.href = '/admin/registrados';\r\n            }\r\n            if(urlActual.includes('/admin/cajas/')){\r\n                window.location.href = '/admin/cajas';\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n  \r\n","\r\n\r\n(function(){\r\n    \r\n    const btnImprimirFacturas = document.querySelector('#btnImprimirFacturas');\r\n    if(btnImprimirFacturas){\r\n        const contenedorSwitch = document.querySelector('#switch');\r\n        const btnGenerarFacturas = document.querySelector('#btnGenerarFacturas');\r\n     \r\n        const btnEliminarFacturas  = document.querySelector('#btnEliminarFacturas');\r\n\r\n        btnEliminarFacturas.addEventListener('click',alertaEliminarFacturas)\r\n      \r\n\r\n        revisarGeneraAuto();\r\n\r\n        function alertaEliminarFacturas(){\r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    eliminarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function eliminarFacturas(){\r\n            try {\r\n                const respuesta = await fetch('/api/eliminar-facturas');\r\n                const resultado = await respuesta.json();\r\n             \r\n                Swal.fire({\r\n                    icon: resultado.type,\r\n        \r\n                    text: resultado.msg\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        btnImprimirFacturas.addEventListener('click',function(){\r\n            const url = '/api/facturas'\r\n            //const url = `${location.origin}/api/facturas`\r\n            window.open(url, '_blank');\r\n        })\r\n\r\n        function alertaGenerarFacturasAuto(){\r\n         \r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Generar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                     generarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function generarFacturas(){\r\n            btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n            btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n              \r\n            try {\r\n                const respuesta = await fetch(`/api/generar-facturas-manual`);\r\n    \r\n                const resultado = await respuesta.json()\r\n                console.log(resultado)\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n                    Swal.fire({\r\n                        icon: resultado.type,\r\n            \r\n                        text: resultado.msg\r\n                    })\r\n     \r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        async function cambiarEstadoAuto(estado){\r\n            let auto;\r\n            if(estado){\r\n                auto = 1;\r\n            }else{\r\n                auto = 0;\r\n            }\r\n\r\n\r\n\r\n      \r\n            const datos = new FormData();\r\n            datos.append('id',1)\r\n            datos.append('auto',auto);\r\n\r\n            const url = `/api/generar-auto`;\r\n           \r\n            try {\r\n                await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n          \r\n             \r\n                revisarGeneraAuto()\r\n            \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        async function revisarGeneraAuto(){\r\n\r\n\r\n         \r\n            try {\r\n                const respuesta = await fetch('/api/generar-auto');\r\n               \r\n                const resultado = await respuesta.json()\r\n               \r\n                const auto = resultado.auto;\r\n                generarCheckBox(auto);\r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n    \r\n        }\r\n\r\n        function generarCheckBox(auto){\r\n            const checkbox = document.createElement('INPUT')\r\n            checkbox.type=\"checkbox\"\r\n            checkbox.id = \"checkbox\";\r\n        \r\n            if(btnGenerarFacturas.classList.contains('inicio__boton-generar--inactivo')){\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo')\r\n            }\r\n            if(auto==1){\r\n                checkbox.checked = true\r\n                btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n\r\n                \r\n            }else{\r\n                checkbox.checked = false\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n            \r\n            }\r\n            checkbox.onchange = function(){\r\n                setTimeout(()=>{\r\n                    cambiarEstadoAuto(checkbox.checked)\r\n                },300)\r\n                \r\n            }\r\n            \r\n            const slider = document.createElement('DIV')\r\n \r\n            slider.classList.add('slider', 'round');\r\n            contenedorSwitch.appendChild(checkbox)\r\n            contenedorSwitch.appendChild(slider)\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n","(function(){\r\n    document.addEventListener(\"DOMContentLoaded\", function(){\r\n        const caja = document.querySelector('#cajas');\r\n    if(caja){\r\n        const subscriptores = document.querySelector('#subscriptores');\r\n        const subscriptoresVigentes = document.querySelector('#subscriptoresVigentes');\r\n        const subscriptoresInactivos = document.querySelector('#subscriptoresInactivos');\r\n        const pagosVigentes = document.querySelector('#pagosVigentes');\r\n        const fecha = document.querySelector('#fecha');\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const ingresosMensuales = document.querySelector('#ingresosMensuales');\r\n        const totalPagos = document.querySelector('#totalPagos');\r\n        const totalConsignaciones = document.querySelector('#totalConsignaciones');\r\n        const selectYear = document.querySelector('#year');\r\n        const selectMes = document.querySelector('#mes');\r\n\r\n        //selects para la consignacion\r\n        const selectYearConsignacion = document.querySelector('#year_consignacion')\r\n        const selectMesConsignacion = document.querySelector('#mes_consignacion')\r\n\r\n\r\n        const consignacionAseo = document.querySelector('#consignacionAseo')\r\n        const consignacionAlc = document.querySelector('#consignacionAlc')\r\n        const consignacionAcu = document.querySelector('#consignacionAcu')\r\n        const total_del_mes = document.querySelector('#total_del_mes')\r\n        const ya_consignado = document.querySelector('#ya_consignado')\r\n        const a_consginar = document.querySelector('#a_consignar')\r\n\r\n        const contenedor_estratos = document.querySelector('#estratos');\r\n        const btnImprimirFacturasFiltradas = document.querySelector('#btnImprimirFacturasFiltradas');\r\n\r\n\r\n        \r\n\r\n        selectYear.addEventListener('change',leerInputs);\r\n        selectMes.addEventListener('change',leerInputs);\r\n\r\n        selectYearConsignacion.addEventListener('change',leerInputsConsignacion);\r\n        selectMesConsignacion.addEventListener('change',leerInputsConsignacion);\r\n\r\n\r\n\r\n        informacionUsuario();\r\n        fechaActual();\r\n        leerInputs();\r\n        consultarEstratos();\r\n\r\n\r\n        btnImprimirFacturasFiltradas.addEventListener('click',function(e){\r\n            const estratoId = contenedor_estratos.value;\r\n            if(estratoId==0){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n        \r\n                    text: 'Porfavor seleccione un estrato'\r\n                })\r\n            }else{\r\n                const url = `/api/facturas?estratos-key=${btoa(estratoId)}`\r\n                //const url = `${location.origin}/api/facturas`\r\n                window.open(url, '_blank');\r\n            }\r\n        })\r\n\r\n        fecha.addEventListener('change',function(e){\r\n            const fechaSeleccionada = e.target.value;\r\n            consultarIngresosFecha(fechaSeleccionada)\r\n        })\r\n     \r\n        async function consultarEstratos(){\r\n            const url = `${location.origin}/api/estratos-all`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarEstratos(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarEstratos(estratos){\r\n     \r\n            estratos.forEach(estrato => {\r\n                const option = document.createElement('OPTION');\r\n                option.value=estrato.id\r\n                option.textContent = estrato.estrato\r\n                contenedor_estratos.appendChild(option)\r\n            });\r\n        }\r\n\r\n        function leerInputs(){\r\n            const year = selectYear.value;\r\n            const mes = selectMes.value;\r\n            const fecha = year+\"-\"+mes;\r\n            consultarIngresosMensuales(fecha);\r\n        }\r\n        function leerInputsConsignacion(){\r\n            const year = selectYearConsignacion.value;\r\n            const mes = selectMesConsignacion.value;\r\n            const fecha = year+\"-\"+mes;\r\n      \r\n       \r\n            consultarConsignaciones(fecha);\r\n        }\r\n\r\n        async function consultarIngresosMensuales(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/ingresos-mensuales';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                ingresosMensuales.textContent = '$'+resultado;\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        async function consultarConsignaciones(fecha){\r\n        \r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/consignaciones';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n        \r\n                imprimirDatosConsignacion(resultado);\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function imprimirDatosConsignacion(resultado){\r\n      \r\n            consignacionAseo.textContent = '';\r\n            consignacionAcu.textContent = '';\r\n            consignacionAlc.textContent = '';\r\n            total_del_mes.textContent = '';\r\n            ya_consignado.textContent = '';\r\n\r\n            a_consginar.textContent = '';\r\n         \r\n        \r\n            consignacionAseo.textContent = '$'+(resultado.aseo||0);\r\n            consignacionAcu.textContent = '$'+(resultado.acueducto || 0);\r\n            consignacionAlc.textContent = '$'+(resultado.alcantarillado || 0);\r\n            total_del_mes.textContent = '$'+(resultado.total_del_mes || 0);\r\n            ya_consignado.textContent = '$'+(resultado.ya_consignado || 0);\r\n            a_consginar.textContent = '$'+(resultado.a_consignar || 0);\r\n        }\r\n\r\n        async function informacionUsuario(){\r\n            try {\r\n                const respuesta = await fetch('/api/inicio/registrados');\r\n                const resultado = await respuesta.json();\r\n                mostrarResultados(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostrarResultados(resultado){\r\n            \r\n            const {registrados, registrados_activos, registrados_inactivos, pagos_vigentes, ingresos, consignaciones} = resultado;\r\n            subscriptores.textContent = registrados;\r\n            subscriptoresVigentes.textContent = registrados_activos;\r\n            subscriptoresInactivos.textContent = registrados_inactivos;\r\n            pagosVigentes.textContent = pagos_vigentes;\r\n            totalPagos.textContent = '$'+ingresos\r\n            totalConsignaciones.textContent = '$'+consignaciones\r\n\r\n        }\r\n        \r\n\r\n        function fechaActual(){\r\n            const fechaActual = new Date().toISOString().slice(0, 10);\r\n            fecha.value = fechaActual;\r\n            consultarIngresosFecha(fechaActual);\r\n        }\r\n        async function consultarIngresosFecha(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n       \r\n            try {\r\n                const respuesta = await fetch('/api/inicio/fecha', {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                mostrarIngresos(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function mostrarIngresos(resultado){\r\n            ingreso.textContent = '$'+resultado\r\n        }\r\n        \r\n    }\r\n    })\r\n    \r\n\r\n})();","(function(){\r\n    const caja = document.querySelector('#caja');\r\n    if(caja){\r\n        const efectivoInicialInput = document.querySelector('#efectivo_inicial');\r\n        efectivoInicialInput.addEventListener('input',function(e){\r\n            formaterValor(e)\r\n        })\r\n        function formaterValor(e){\r\n        \r\n        \r\n            const efectivo_inicial = e.target.value;\r\n            let efectivo_inicial_sin_formato = parseFloat(efectivo_inicial.replace(/,/g, ''));\r\n            if(isNaN(efectivo_inicial_sin_formato)){\r\n                efectivo_inicial_sin_formato = '';\r\n            }\r\n            const efectivo_inicial_formateada =  efectivo_inicial_sin_formato.toLocaleString('en');\r\n            e.target.value = efectivo_inicial_formateada ;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const infoCaja = document.querySelector('#tablaCajasPagos')\r\n \r\n    if(infoCaja){\r\n        let tablaCajasPagos;\r\n        const urlActual = new URL(window.location);\r\n        const params = new URLSearchParams(urlActual.search);\r\n        const id = params.get('id');\r\n        const infoCaja = document.querySelector('#tablaCajasPagos')\r\n    \r\n       \r\n        mostrarEstratos();\r\n        function mostrarEstratos(){\r\n            \r\n            if(Number.isInteger(parseInt(id))){\r\n         \r\n                $(\"#tablaCajasPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n                tablaCajasPagos = $('#tablaCajasPagos').DataTable({\r\n                    ajax:'/api/cajas/pagos?id='+id,\r\n                    \"deferRender\":true,\r\n                    \"retrieve\":true,\r\n                    \"proccesing\":true,\r\n                    responsive:true\r\n                });\r\n            \r\n                // $.ajax({\r\n                //     url:'/api/cajas/pagos?id='+id,\r\n                    \r\n                //     success:function(req){\r\n                //         console.log(req)\r\n                //     },\r\n                //     error:function(error){\r\n                //         console.log(error.responseText);\r\n                //     }\r\n                    \r\n                // })\r\n              \r\n            }else{\r\n                window.location.href='/admin/cajas'\r\n            }\r\n            \r\n        }\r\n    }\r\n})();","\r\n(function(){\r\n    const tablaCajas = document.querySelector('#tablaCajas');\r\n    if(tablaCajas){\r\n        \r\n\r\n        let tablaCajasData;\r\n\r\n        $('#tablaCajas').on('click', '#estadoCaja', function(e) {\r\n            // Manejar el evento aquí\r\n            const id = $(this).data('cajaId');\r\n            alertaCierre(id);\r\n        });\r\n       \r\n\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n        \r\n            tablaCajasData.on('draw', function(){\r\n                const estadoCaja = document.querySelector('#estadoCaja');\r\n                if(estadoCaja){\r\n\r\n                    estadoCaja.addEventListener('dblclick',function(e){\r\n                   \r\n                        const id = e.target.dataset.cajaId;\r\n                        alertaCierre(id);\r\n                    })\r\n                }\r\n           \r\n            });\r\n        }\r\n\r\n        function alertaCierre(id){\r\n            Swal.fire({\r\n                \r\n                title: 'Esta Seguro de Cerrar esta Caja?',\r\n                text:'Esta acción no se puede deshacer',\r\n                icon:'warning',\r\n                showDenyButton: true,\r\n          \r\n                confirmButtonText: 'Seguro',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                \r\n\r\n                if (result.isConfirmed) {\r\n                 \r\n                   cerrarCaja(id);\r\n                } \r\n              })\r\n        }\r\n\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n   \r\n            try {\r\n                const url = '/api/cajas/cerrar';\r\n                //const url =`${location.origin}/api/cajas/cerrar`;\r\n                //const url = 'http://localhost:3000/api/cajas/cerrar';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'success'){\r\n                    if(resultado.tipo=='error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: resultado.mensaje,\r\n            \r\n                        })\r\n                        return;\r\n                    }\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                      \r\n                        text: resultado.mensaje,\r\n                        \r\n                    })\r\n                    tablaCajasData.ajax.reload(); \r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function mostrarEstratos(){\r\n            $(\"#tablaCajas\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaCajasData = $('#tablaCajas').DataTable({\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n    }\r\n})();\r\n\r\n\r\n","(function(){\r\n    const emitidasPendientes = document.querySelector('#tablaEmitidasPendientes');\r\n    if(emitidasPendientes){\r\n      \r\n        let tablaEmitidasPendientesData;\r\n        mostrarEmitidasPendientes();\r\n        \r\n        $('#tablaEmitidasPendientes').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarFactura($(this).attr('data-numero-factura'))\r\n        });\r\n        \r\n      function previsualizarFactura(numero_factura){\r\n        const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n        // Abre la URL en una nueva pestaña\r\n        window.open(url, '_blank');\r\n      }\r\n\r\n        function mostrarEmitidasPendientes(){\r\n      \r\n            $(\"#tablaEmitidasPendientes\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEmitidasPendientesData = $('#tablaEmitidasPendientes').DataTable({\r\n                ajax: '/api/emitidas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/emitidas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tablaPagos = document.querySelector('#tablaPagos');\r\n    if(tablaPagos){\r\n\r\n   \r\n        let tablaPagosData;\r\n        mostraroPagos();\r\n\r\n        $('#tablaPagos').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarPago($(this).attr('data-numero-pago'))\r\n        });\r\n        $('#tablaPagos').on('click', '#btn_anular', function(e) {\r\n            // Manejar el evento aquí\r\n            eliminarPagoAlerta($(this).attr('data-numero-pago'));\r\n            // Resto del código\r\n        });\r\n\r\n        \r\n      \r\n        \r\n      \r\n        function previsualizarPago(numero_pago){\r\n            const url =`/api/previsualizar-pago?key=${btoa(numero_pago)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n        }\r\n        function eliminarPagoAlerta(numero_pago){\r\n                  \r\n            Swal.fire({\r\n                title: `Esta seguro que desea anular el pago # ${numero_pago}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    anularPago(numero_pago);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function anularPago(numero_pago){\r\n            const datos = new FormData();\r\n            datos.append('numero_pago', numero_pago);\r\n            \r\n            \r\n            const url = '/api/anular-pago';\r\n            try {\r\n                const respuesta = await  fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaPagosData.ajax.reload(); \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostraroPagos(){\r\n      \r\n            $(\"#tablaPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaPagosData = $('#tablaPagos').DataTable({\r\n                ajax: '/api/lista-pagos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/lista-pagos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","\r\n\r\n(function () {\r\n    const contenedorPagar = document.querySelector('#contenedorPagar');\r\n    if (contenedorPagar) {\r\n        const inputCodigo = document.querySelector('#numero_factura');\r\n        const contenedorFacturas = document.querySelector('#pagarFacturas');\r\n        const guardarPagosBtn = document.querySelector('#guardarPagos');\r\n        const totalFacturas = document.querySelector('#totalFacturas');\r\n        const totalRecaudo = document.querySelector('#totalRecaudo');\r\n\r\n        let facturas;\r\n        let arreglofacturas = []\r\n        consultarFacturas()\r\n        guardarPagosBtn.addEventListener('click', confirmarPagos);\r\n\r\n        async function guardarPagos() {\r\n            const datos = new FormData();\r\n\r\n            const arregloPagos = arreglofacturas.map(factura => factura.id);\r\n\r\n            datos.append('pagos', JSON.stringify(arregloPagos));\r\n            try {\r\n                const respuesta = await fetch('/api/subir-pagos', {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                if (resultado.tipo == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops',\r\n                        text: resultado.mensaje\r\n                    })\r\n                } else {\r\n                    limpiarHtml();\r\n                    totalFacturas.textContent = 0;\r\n                    totalRecaudo.textContent = '$0'\r\n                    arreglofacturas = [];\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n\r\n                        text: resultado.mensaje\r\n                    })\r\n\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function confirmarPagos() {\r\n            if (arreglofacturas.length > 0) {\r\n                Swal.fire({\r\n                    title: `Esta seguro que desea subir ${totalFacturas.textContent} Pagos por ${totalRecaudo.textContent}`,\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        guardarPagos();\r\n\r\n                        //Swal.fire('Saved!', '', 'success')\r\n                    }\r\n                })\r\n            } else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Debe agregar al menos una factura',\r\n                    'error'\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        function infoFactura(facturaEncontrada) {\r\n\r\n            if (arreglofacturas.find(factura => factura.id === facturaEncontrada.id)) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ya fue agregada a la fila de pagos',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n\r\n            } else if (facturaEncontrada.pagado == 1) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ya ha sido cancelada',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n\r\n            } else if (facturaEncontrada.combinado == 1) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ha sido combinada',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n            } else if (facturaEncontrada.estrato == \"TEMPORALES\") {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Estrato Temporales no admitido ',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Factura agregada a la pila',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                const { id, numero_factura, registrado_nombre, estrato, mes_facturado, copago, ajuste, saldo_anterior } = facturaEncontrada;\r\n                arreglofacturas.unshift({\r\n                    numero_factura: numero_factura,\r\n                    subscriptor: registrado_nombre,\r\n                    estrato: estrato,\r\n                    mes_facturado: mes_facturado,\r\n                    copago: copago,\r\n                    ajuste: ajuste,\r\n                    saldo_anterior: saldo_anterior,\r\n                    id: id\r\n\r\n\r\n                })\r\n\r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                limpiarHtml();\r\n                let recaudo = 0;\r\n                let cantidadFacturas = 0;\r\n                arreglofacturas.forEach(factura => {\r\n\r\n                    const { numero_factura, subscriptor, estrato, mes_facturado, copago, ajuste, saldo_anterior } = factura;\r\n\r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdRegistrado = document.createElement('TD');\r\n                    tdRegistrado.classList.add('table__td');\r\n                    tdRegistrado.innerHTML = `<span class=\"table__span\">Cliente:&nbsp; </span>&nbsp; ${subscriptor}`;\r\n\r\n                    const tdEstrato = document.createElement('TD');\r\n                    tdEstrato.classList.add('table__td');\r\n                    tdEstrato.innerHTML = `<span class=\"table__span\">Estrato:&nbsp; </span>&nbsp; ${estrato}`\r\n\r\n                    const tdMesFacturado = document.createElement('TD');\r\n                    tdMesFacturado.classList.add('table__td');\r\n                    tdMesFacturado.innerHTML = `<span class=\"table__span\">Mes Facturado:&nbsp; </span>&nbsp; ${mes_facturado}`\r\n\r\n                    let monto = parseFloat(copago) + parseFloat(saldo_anterior) - parseFloat(ajuste)\r\n\r\n                    const tdCopago = document.createElement('TD');\r\n                    tdCopago.classList.add('table__td');\r\n                    tdCopago.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto.toLocaleString('en')}`\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdRegistrado)\r\n                    tr.appendChild(tdEstrato)\r\n                    tr.appendChild(tdMesFacturado)\r\n                    tr.appendChild(tdCopago)\r\n                    tabla.appendChild(tr);\r\n                    recaudo = recaudo + monto;\r\n                    cantidadFacturas = cantidadFacturas + 1;\r\n\r\n                })\r\n\r\n                totalFacturas.textContent = cantidadFacturas\r\n                totalRecaudo.textContent = '$' + recaudo.toLocaleString('en')\r\n\r\n                contenedorFacturas.appendChild(tabla)\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        function consultarFactura(e) {\r\n            const numero_factura = e.target.value\r\n\r\n\r\n            const facturaEncontrada = facturas.find(factura => factura.numero_factura === numero_factura);\r\n            if (facturaEncontrada) {\r\n                inputCodigo.value = '';\r\n                infoFactura(facturaEncontrada);\r\n            }\r\n        }\r\n\r\n        function agregarEventos() {\r\n\r\n            inputCodigo.addEventListener('input', function (e) {\r\n\r\n\r\n                consultarFactura(e);\r\n            })\r\n        }\r\n\r\n\r\n\r\n        async function consultarFacturas() {\r\n            try {\r\n                const resultado = await fetch('/api/facturas-por-pagar');\r\n                const respuesta = await resultado.json();\r\n                facturas = respuesta;\r\n\r\n\r\n                agregarEventos();\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function limpiarHtml() {\r\n            while (contenedorFacturas.firstChild) {\r\n                contenedorFacturas.removeChild(contenedorFacturas.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n})();","\r\n\r\n(function(){\r\n    const contenedorFactura = document.querySelector('#facturas');\r\n    if(contenedorFactura){\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n           \r\n            consultarFacturas();\r\n\r\n            async function consultarFacturas(){\r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    const url = '/api/facturas-registrado'\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const resultado = await respuesta.json();\r\n             \r\n                    if(resultado){\r\n                  \r\n                        imprimirDeuda(resultado.deuda);\r\n                        imprimirResultados(resultado.facturas);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            function imprimirDeuda(valorDeuda){\r\n                const deuda = document.querySelector('#deuda')\r\n                deuda.classList = [];\r\n                deuda.classList.add('deuda__valor')\r\n                if(valorDeuda==0){\r\n                    \r\n                    deuda.classList.add('deuda__valor--pagado')\r\n                }else{\r\n                    deuda.classList.add('deuda__valor--vencido')\r\n                }\r\n                deuda.textContent = `$ ${valorDeuda.toLocaleString('en')}`\r\n            }\r\n\r\n            function imprimirResultados(facturas){\r\n                \r\n\r\n                \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                facturas.forEach(factura => {\r\n  \r\n                    const {id, numero_factura, fecha_emision, periodo_fin, periodo_inicio, copago, pagado, ajuste, combinado, saldo_anterior} = factura\r\n                    const dateFechaActual = new Date();\r\n                    const mesActual = dateFechaActual.getMonth()+1;\r\n                 \r\n                    const arregloFecha = fecha_emision.split('-');\r\n                    const mesEmision = parseFloat(arregloFecha[1])\r\n                    \r\n                   \r\n                   const diferenciaFechas = mesActual - mesEmision;\r\n                    \r\n            \r\n                   \r\n                \r\n              \r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionFactura(e);\r\n                        informacionFactura(factura);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdEmitida = document.createElement('TD');\r\n                    tdEmitida.classList.add('table__td');\r\n                    tdEmitida.innerHTML = `<span class=\"table__span\">Emitida:&nbsp; </span>&nbsp; ${fecha_emision}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${parseFloat(montoTotal).toLocaleString('en')}`\r\n\r\n                    const tdEstado = document.createElement('TD');\r\n                    tdEstado.classList.add('table__td');\r\n                    if(diferenciaFechas>0 && pagado==0){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Impaga</span>`\r\n                    }else{\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--${ pagado== 1?'pagado':'impaga'}\">${pagado == 1?'Pagado':'Impaga'}</span>`\r\n                    \r\n                    }   \r\n                    if(combinado == 1){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Combinada</span>`\r\n                    }\r\n\r\n                     \r\n                   \r\n\r\n\r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdEmitida)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdEstado)\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorFactura.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionFactura(factura){\r\n                const {id, numero_factura, fecha_emision, estrato, periodo_inicio, periodo_fin, copago,ajuste, pagado, saldo_anterior, combinado} = factura;\r\n               \r\n           \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#actions')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                const accionesCliente = document.createElement('DIV');\r\n                accionesCliente.classList.add('registrado__datos');\r\n\r\n                const clienteLabel = document.createElement('SPAN');\r\n                clienteLabel.classList.add('registrado__label');\r\n                clienteLabel.textContent = 'Cliente'\r\n                \r\n                const clienteDato = document.createElement('P');\r\n                clienteDato.classList.add('registrado__dato');\r\n                clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesEstrato = document.createElement('DIV');\r\n                accionesEstrato.classList.add('registrado__datos');\r\n\r\n                \r\n                const estratoLabel = document.createElement('SPAN');\r\n                estratoLabel.classList.add('registrado__label');\r\n                estratoLabel.textContent = 'Estrato'\r\n                \r\n                const estratoDato = document.createElement('P');\r\n                estratoDato.classList.add('registrado__dato');\r\n                estratoDato.textContent = estrato\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n\r\n           \r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n\r\n                const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${montoTotal .toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                accionesCliente.appendChild(clienteLabel);\r\n                accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesEstrato.appendChild(estratoLabel);\r\n                accionesEstrato.appendChild(estratoDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n    \r\n                accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesEstrato);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarFactura(numero_factura);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n               \r\n\r\n                if(pagado==0 && combinado==0){\r\n                    const btnPagar =  document.createElement('SPAN');\r\n                    btnPagar.classList.add('actions__boton');\r\n                    btnPagar.textContent = 'Pago Efectivo';\r\n                    btnPagar.id = 'btnPagar';\r\n                   \r\n                    const btnBanco =  document.createElement('SPAN');\r\n                    btnBanco.classList.add('actions__boton');\r\n                    btnBanco.textContent = 'transferencia';\r\n                    btnBanco.id = 'btnBanco';\r\n\r\n                    btnPagar.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 1, btnPagar,btnBanco);\r\n                    }\r\n                    btnBanco.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 0, btnPagar,btnBanco);\r\n                    }\r\n    \r\n                 \r\n                    botonesContenedor.appendChild(btnPagar);\r\n                    botonesContenedor.appendChild(btnBanco);\r\n                }\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarFactura(numero_factura){\r\n               \r\n\r\n                const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n            function pagarFactura(factura, metodo, btnPagar,btnBanco){\r\n                const {id,copago, periodo_inicio, periodo_fin, numero_factura}  = factura;\r\n   \r\n\r\n                const registrado = document.createElement('DIV');\r\n                registrado.classList.add('registrado');\r\n\r\n                const metodoDatos = document.createElement('DIV');\r\n                metodoDatos.classList.add('registrado__datos');\r\n\r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo de Pago:'\r\n\r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato')\r\n                metodoDato.textContent = metodo==1?'Efectivo':'Transferencia';\r\n\r\n                const registradoDatos = document.createElement('DIV');\r\n                registradoDatos.classList.add('registrado__datos');\r\n\r\n                const registradoLabel = document.createElement('SPAN');\r\n                registradoLabel.classList.add('registrado__label');\r\n                registradoLabel.textContent = 'Cliente:'\r\n\r\n                const registradoDato = document.createElement('P');\r\n                registradoDato.classList.add('registrado__dato')\r\n                registradoDato.textContent = nombreCliente.textContent;\r\n\r\n                const periodoDatos = document.createElement('DIV');\r\n                periodoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo:'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const montoDatos = document.createElement('DIV');\r\n                montoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto: '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${(parseFloat(copago)).toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                \r\n\r\n                metodoDatos.appendChild(metodoLabel);\r\n                metodoDatos.appendChild(metodoDato);\r\n\r\n                registradoDatos.appendChild(registradoLabel);\r\n                registradoDatos.appendChild(registradoDato);\r\n            \r\n                periodoDatos.appendChild(periodoLabel)\r\n                periodoDatos.appendChild(periodoDato)\r\n\r\n                montoDatos.appendChild(montoLabel)\r\n                montoDatos.appendChild(montoDato)\r\n\r\n                registrado.appendChild(metodoDatos);\r\n                registrado.appendChild(registradoDatos);\r\n                registrado.appendChild(periodoDatos);\r\n                registrado.appendChild(montoDatos);\r\n\r\n               \r\n  \r\n\r\n                Swal.fire({\r\n                    title: `Confirme La información`,\r\n                    html: registrado,\r\n                    text:'Esta accion no se puede deshacer',\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                  }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        enviarInformacionPagar(id, metodo, btnPagar, btnBanco);\r\n                        \r\n                      //Swal.fire('Saved!', '', 'success')\r\n                    }else{\r\n                        btnPagar.style.display = 'block'\r\n                        btnBanco.style.display  = 'block'\r\n                    }\r\n                  })\r\n            }\r\n\r\n            async function enviarInformacionPagar(id, metodo, btnPagar, btnBanco){\r\n                //const url =  'http://localhost:3000/api/pagar'; //desarrollo\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                datos.append('metodo', metodo);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n            \r\n               \r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            \r\n                            text: resultado.mensaje\r\n                          })\r\n                    const body =  document.querySelector('body');\r\n                    const inputHidden = document.createElement(\"input\");\r\n                    inputHidden.type = \"hidden\"; \r\n                    inputHidden.id = \"confirmacionPago\"; \r\n                    body.appendChild(inputHidden);\r\n\r\n\r\n                        while(contenedorFactura.firstChild){\r\n                            contenedorFactura.removeChild(contenedorFactura.firstChild);\r\n                        }\r\n                     \r\n                        document.querySelector('#btnPagar').remove();\r\n                        consultarFacturas();\r\n                     \r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n  \r\n          \r\n\r\n\r\n\r\n            function seleccionFactura(e){\r\n\r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#actions')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n            \r\n       \r\n\r\n       \r\n        \r\n\r\n     }\r\n\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const tablaRegistrados = document.querySelector('#tablaRegistrados');\r\n \r\n    if(tablaRegistrados){\r\n\r\n        $('#tablaRegistrados').on('click', '#btn_eliminar_registrado', function(e) {\r\n            // Manejar el evento aquí\r\n            leerAccion(e);\r\n            // Resto del código\r\n        });\r\n       \r\n        let tablaRegistradosData;\r\n        mostrarRegistrados();\r\n        verificarCargaTabla();\r\n\r\n        function verificarCargaTabla(){\r\n            tablaRegistradosData.on('draw', eventosClickEditar);\r\n        }\r\n        function eventosClickEditar(){\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_registrado');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                    // const registradoId = e.currentTarget.dataset.registradoId;\r\n                    leerAccion(e);\r\n                })\r\n            })\r\n        }\r\n        // tablaRegistrados.addEventListener('click',function(e){\r\n        //     leerAccion(e);\r\n        // })\r\n        function leerAccion( e){\r\n       \r\n            if(e.currentTarget.id=='btn_eliminar_registrado'){\r\n                eliminarRegistrado( e);\r\n            }\r\n            \r\n        }\r\n        function eliminarRegistrado(e){\r\n            const registrado = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.registradoId;\r\n            \r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${registrado}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n      \r\n            url = `/api/registrados/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaRegistradosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n        function mostrarRegistrados(){\r\n            $(\"#tablaRegistrados\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaRegistradosData = $('#tablaRegistrados').DataTable({\r\n                ajax: '/api/registrados',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/registrados',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const contenedorPagado = document.querySelector('#pagos');\r\n    if(contenedorPagado){\r\n            let control = true;\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n            const actions = document.querySelector('#actions');\r\n            // actions.addEventListener('click',function(e){\r\n           \r\n            //     if(e.target.id=='btnPagar'){\r\n            //        const swal =  document.querySelector('.swal2-confirm')\r\n\r\n            //        swal.addEventListener('click',function(){\r\n            //             setTimeout(()=>{\r\n                         \r\n            //                 consultarPagos();\r\n            //             },2000)\r\n            //        })\r\n            //     }\r\n            // })\r\n\r\n           const body  =  document.querySelector('body');\r\n           body.addEventListener('click',function(){\r\n                const inputHidden = document.querySelector('#confirmacionPago')\r\n                if(inputHidden){\r\n                    consultarPagos();\r\n                  \r\n                }\r\n           })\r\n\r\n            \r\n           \r\n           \r\n            consultarPagos();\r\n    \r\n            \r\n      \r\n            async function consultarPagos(){\r\n                if(document.querySelector('#confirmacionPago')){\r\n                    document.querySelector('#confirmacionPago').remove()\r\n                }\r\n                \r\n            \r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    //const url = 'http://localhost:3000/api/pagos'//desarrollo \r\n                    const url = '/api/pagos' //produccion\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const pagos = await respuesta.json();\r\n                    \r\n                    if(pagos){\r\n                        \r\n                        imprimirResultados(pagos);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n\r\n            function imprimirResultados(pagos){\r\n\r\n                while(contenedorPagado.firstChild){\r\n                    contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                }\r\n             \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                pagos.forEach(pago => {\r\n  \r\n                    const {id, numero_factura, fecha_pago, periodo_fin, periodo_inicio, monto, numero_pago, estado} = pago\r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionarPago(e);\r\n                        informacionPago(pago);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdFechaPago = document.createElement('TD');\r\n                    tdFechaPago.classList.add('table__td');\r\n                    tdFechaPago.innerHTML = `<span class=\"table__span\">Fecha de Pago:&nbsp; </span>&nbsp; ${fecha_pago}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto}`\r\n\r\n                    const tdNumeroPago = document.createElement('TD');\r\n                    tdNumeroPago.classList.add('table__td');\r\n                    tdNumeroPago.innerHTML = ` <span class=\"table__span\">Pago #&nbsp; </span> ${numero_pago}`\r\n\r\n                    \r\n\r\n                   \r\n\r\n                \r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdFechaPago)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdNumeroPago)\r\n                    if(estado==0){\r\n                      \r\n                        const tdPagoAnulado = document.createElement('TD');\r\n                        tdPagoAnulado.classList.add('table__td');\r\n                        tdPagoAnulado.innerHTML = `<span class=\"table__boton table__boton--vencida\">Anulado</span>`\r\n                        tr.appendChild(tdPagoAnulado);\r\n                    }\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorPagado.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionPago(pago){\r\n                const {id, numero_factura,numero_pago, estrato, metodo, periodo_inicio, periodo_fin, monto, recaudador, factura_id} = pago;\r\n               \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#payments')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                // const accionesCliente = document.createElement('DIV');\r\n                // accionesCliente.classList.add('registrado__datos');\r\n\r\n                // const clienteLabel = document.createElement('SPAN');\r\n                // clienteLabel.classList.add('registrado__label');\r\n                // clienteLabel.textContent = 'Cliente'\r\n                \r\n                // const clienteDato = document.createElement('P');\r\n                // clienteDato.classList.add('registrado__dato');\r\n                // clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesRecaudador = document.createElement('DIV');\r\n                accionesRecaudador.classList.add('registrado__datos');\r\n\r\n                \r\n                const recaudadorLabel = document.createElement('SPAN');\r\n                recaudadorLabel.classList.add('registrado__label');\r\n                recaudadorLabel.textContent = 'Recaudador'\r\n                \r\n                const recaudadorDato = document.createElement('P');\r\n                recaudadorDato.classList.add('registrado__dato');\r\n                recaudadorDato.textContent = recaudador\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${monto}`;\r\n\r\n                /* comprobante */\r\n                const accionesMetodo = document.createElement('DIV');\r\n                accionesMetodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo '\r\n                \r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato');\r\n                metodoDato.textContent =metodo == 1?'Efectivo':  'Transferencia';\r\n                \r\n\r\n                \r\n\r\n                // accionesCliente.appendChild(clienteLabel);\r\n                // accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesRecaudador.appendChild(recaudadorLabel);\r\n                accionesRecaudador.appendChild(recaudadorDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n\r\n                accionesMetodo.appendChild(metodoLabel);\r\n                accionesMetodo.appendChild(metodoDato);\r\n    \r\n                // accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesRecaudador);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n                accionesContenedor.appendChild(accionesMetodo);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarComprobante(factura_id);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n              \r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarComprobante(factura_id){\r\n               \r\n\r\n                const url =`/api/previsualizar-pago?key=${btoa(factura_id)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n           \r\n            async function enviarInformacionPagar(id){\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                          \r\n                            text: resultado.mensaje\r\n                          })\r\n                        while(contenedorPagado.firstChild){\r\n                            contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                        }\r\n                       \r\n                     \r\n                      \r\n                        consultarPagos();\r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n   \r\n          \r\n\r\n\r\n\r\n            function seleccionarPago(e){\r\n                \r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#payments')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n\r\n\r\n\r\n     }\r\n    \r\n\r\n})();\r\n\r\n","\r\n\r\n(function(){\r\n    const estrato = document.querySelector('#estrato');\r\n    if(estrato){\r\n\r\n        /* Selectores */\r\n        const tarifaPlenaInput= document.querySelector('#tarifa_plena');\r\n        const porcentajeSubsidioInput = document.querySelector('#porcentaje_subsidio');\r\n        const subsidioInput= document.querySelector('#subsidio') ;\r\n        const copagoInput = document.querySelector('#copago')\r\n\r\n        const porcentajeAcuInput= document.querySelector('#porcentaje_acu');\r\n        const subsidioAcuInput= document.querySelector('#subsidio_acu') ;\r\n        const copagoAcuInput = document.querySelector('#copago_acu');\r\n        const totalAcuInput = document.querySelector('#tarifa_plena_acu')\r\n\r\n        const porcentajeAlcInput = document.querySelector('#porcentaje_alc');\r\n        const subsidioAlcInput= document.querySelector('#subsidio_alc') ;\r\n        const copagoAlcInput = document.querySelector('#copago_alc');\r\n        const totalAlcInput = document.querySelector('#tarifa_plena_alc')\r\n        \r\n\r\n        const porcentajeAseoInput = document.querySelector('#porcentaje_aseo');\r\n        const subsidioAseoInput= document.querySelector('#subsidio_aseo') ;\r\n        const copagoAseoInput = document.querySelector('#copago_aseo');\r\n        const totalAseoInput = document.querySelector('#tarifa_plena_aseo')\r\n\r\n        const ajusteInput = document.querySelector('#ajuste');\r\n        const porcentajeAjusteInput = document.querySelector('#porcentaje_ajuste');\r\n\r\n        /* Eventos */\r\n\r\n        tarifaPlenaInput.addEventListener('input',function(e){\r\n            formaterValor(e);\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n        porcentajeSubsidioInput.addEventListener('input',function(e){\r\n            const porcentaje = parseFloat(e.target.value)\r\n            if(porcentaje<0 || porcentaje>100){\r\n              \r\n                e.target.value = '';\r\n            }\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n\r\n        porcentajeAcuInput.addEventListener('input',function(e){\r\n        \r\n          \r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n          \r\n            const porcentaje = (e.target.value)/100;\r\n     \r\n            calcularDatos(porcentaje,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n          \r\n          \r\n        })\r\n        porcentajeAlcInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n    \r\n          \r\n        })\r\n        porcentajeAseoInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n          \r\n        })\r\n\r\n\r\n\r\n\r\n        porcentajeAjusteInput.addEventListener('input',calcularValorAjuste)\r\n        \r\n        ajusteInput.addEventListener('input',function(e){\r\n            calcularPorcentajeAjuste()\r\n            formaterValor(e);\r\n         \r\n          \r\n        })\r\n\r\n        /* Funciones */\r\n\r\n        function formaterValor(e){\r\n            const tarifa_plena = e.target.value;\r\n            let tarifa_plena_sin_formato = parseFloat(tarifa_plena.replace(/,/g, ''));\r\n            if(isNaN(tarifa_plena_sin_formato)){\r\n                tarifa_plena_sin_formato = '';\r\n            }\r\n            const tarifa_plena_formateada =  tarifa_plena_sin_formato.toLocaleString('en');\r\n            e.target.value = tarifa_plena_formateada ;\r\n        }\r\n\r\n        function calcularValorAjuste(){\r\n\r\n            if(((porcentajeAjusteInput.value)*1)<0 || ((porcentajeAjusteInput.value)*1)>100){\r\n                porcentajeAjusteInput.value = '';\r\n            }\r\n            if(copagoInput.value!='' && porcentajeAjusteInput.value !='' && copagoInput.value!=0){\r\n                const copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n                const ajuste = ((porcentajeAjusteInput.value/100)*copago).toFixed(2);\r\n                ajusteInput.value = (parseFloat(ajuste)).toLocaleString('en');\r\n \r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n        }\r\n    \r\n        function calcularPorcentajeAjuste(){\r\n      \r\n            if(copagoInput.value!='' && ajusteInput.value !='' && copagoInput.value!=0){\r\n                const valor_ajuste = parseFloat(ajusteInput.value.replace(/,/g, ''));\r\n                const valor_copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n\r\n                if(valor_ajuste>valor_copago){\r\n                    ajusteInput.value = '';\r\n                    porcentajeAjusteInput.value = '';\r\n                    return;\r\n                }\r\n\r\n                const porcentaje_ajuste = (((valor_ajuste*100)/valor_copago).toFixed(2))*1;\r\n                porcentajeAjusteInput.value = porcentaje_ajuste;\r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        function revisarValores(){\r\n\r\n   \r\n           \r\n            calcularDatos(porcentajeAcuInput.value/100,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n            calcularDatos(porcentajeAlcInput.value/100,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n            calcularDatos(porcentajeAseoInput.value/100,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n     \r\n        }\r\n     \r\n        function calcularDatos(porcentaje,subsidioInputRef, copagoInputRef,totalInputRef){\r\n         \r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n            const porcentaje_subsidio = (porcentajeSubsidioInput.value)/100;\r\n        \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0 && porcentaje >=0){\r\n              \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n            \r\n                const subsidio = tarifa_plena*porcentaje_subsidio*porcentaje;\r\n                const copago = (((tarifa_plena*(1-porcentaje_subsidio))*porcentaje).toFixed(2))*1;\r\n                const totalValor = tarifa_plena*porcentaje;\r\n                const total = totalValor.toLocaleString('en');\r\n              \r\n                insertarDatos(subsidio, copago, subsidioInputRef, copagoInputRef,totalInputRef,total);\r\n            }else{\r\n                subsidioInputRef.value=0;\r\n                copagoInputRef.value=0;\r\n                totalInputRef.value=0;\r\n            }\r\n\r\n        }\r\n\r\n       \r\n\r\n        function calcularSubsidioCopago(){\r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n\r\n            const porcentaje_subsidio = parseFloat((porcentajeSubsidioInput.value)/100);\r\n            \r\n          \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0){\r\n               \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n                const subsidio = tarifa_plena*porcentaje_subsidio;\r\n                const copago = ((tarifa_plena*(1-porcentaje_subsidio)).toFixed(2))*1;\r\n          \r\n                insertarDatos(subsidio, copago, subsidioInput, copagoInput);\r\n            }else{\r\n              \r\n                subsidioInput.value = '' ;\r\n                copagoInput.value = '';\r\n            }\r\n        }\r\n\r\n        function insertarDatos(subsidio, copago, referencia1, referencia2, referencia3=[] , total= ''){\r\n            if(total!=''){\r\n               referencia3.value = total;\r\n            }\r\n            const valor_subsidio = subsidio.toLocaleString('en');\r\n            const valor_copago = copago.toLocaleString('en');\r\n            referencia1.value = valor_subsidio\r\n            referencia2.value = valor_copago\r\n           \r\n        }\r\n        \r\n    }\r\n})();","\r\n(function(){\r\n\r\n\r\n    const tablaEstratos = document.querySelector('#tablaEstratos');\r\n\r\n    if(tablaEstratos){\r\n\r\n        $('#tablaEstratos').on('click', '#btn_eliminar_estrato', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarEstrato(e);\r\n        });\r\n\r\n        let tablaEstratosData;\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaEstratosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            const btnsInfo = document.querySelectorAll('#btn_info_estrato');\r\n            \r\n            btnsInfo.forEach(btnInfo=>{\r\n                btnInfo.addEventListener('click', function(e){\r\n                  \r\n                    infoEstrato(e);\r\n                })\r\n            })\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_estrato');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n             \r\n                    eliminarEstrato(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n      \r\n\r\n        async function infoEstrato(e){\r\n            const id = e.currentTarget.dataset.estratoId;\r\n            const url = `/api/estratos/info?id=${id}`;\r\n  \r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n\r\n        function mostrarInfo(resultado){\r\n  \r\n\r\n            const modal = document.createElement('DIV');\r\n            modal.classList.add('modal');\r\n            modal.innerHTML = `\r\n                <div class=\"modal__informacion\" id=\"info\">\r\n                    <h3>Información del Estrato </h3>\r\n                    \r\n                    <ul class=\"modal__lista\">\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                           \r\n                            <p class=\"modal__info\">Estrato: <span>${resultado.estrato}</span></p>\r\n                            <p class=\"modal__info\">Año Vigente: <span>${resultado.year}</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena: <span>${parseFloat((resultado.tarifa_plena)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Número de Facturas Vencidas: <span>${resultado.facturas_vencidas}</span></p>\r\n        \r\n                         </li>\r\n                   \r\n\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Subsidio: <span>${resultado.porcentaje_subsidio}%</span></p>\r\n                            <p class=\"modal__info\">Porcentaje Copago: <span>${resultado.porcentaje_copago}%</span></p>\r\n                            <p class=\"modal__info\">Subsidio: <span>${parseFloat((resultado.subsidio)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Copago: <span>${parseFloat((resultado.copago)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                        \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Acueducto: <span>${parseFloat((resultado.porcentaje_acu)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Acueducto: <span>${parseFloat((resultado.tarifa_plena_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Acueducto: <span>${parseFloat((resultado.subsidio_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Acueducto : <span>${parseFloat((resultado.copago_acu)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Alcantarillado: <span>${parseFloat((resultado.porcentaje_alc)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Alcantarillado: <span>${parseFloat((resultado.tarifa_plena_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Alcantarillado: <span>${parseFloat((resultado.subsidio_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Alcantarillado : <span>${parseFloat((resultado.copago_alc)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Aseo: <span>${parseFloat((resultado.porcentaje_aseo)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Aseo: <span>${parseFloat((resultado.tarifa_plena_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Aseo: <span>${parseFloat((resultado.subsidio_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Aseo : <span>${parseFloat((resultado.copago_aseo)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Ajuste: <span>${parseFloat((resultado.porcentaje_ajuste)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Ajuste: <span>${parseFloat((resultado.ajuste)).toLocaleString('en')}</span></p>\r\n                           \r\n                         </li>\r\n                         \r\n                        \r\n                    </ul>\r\n\r\n                    <div class=\"modal__opciones\">\r\n                      \r\n             \r\n                      \r\n                        <button type=\"button\" class=\"modal__cerrar-modal\">Cerrar</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            `\r\n            setTimeout(()=>{\r\n                const info = document.querySelector('#info');\r\n                info.classList.add('modal__informacion--animar');\r\n            },10)\r\n            modal.addEventListener('click',function(e){\r\n                e.preventDefault();\r\n                if(e.target.classList.contains('modal__cerrar-modal')){\r\n                    const info = document.querySelector('#info');\r\n                    info.classList.add('modal__informacion--cerrar');\r\n                    setTimeout(()=>{\r\n                        modal.remove();\r\n                        \r\n                       \r\n                    },500)\r\n                }\r\n               \r\n           \r\n            })\r\n\r\n            document.querySelector('.dashboard__contenedor').appendChild(modal);\r\n        }\r\n\r\n        function eliminarEstrato(e){\r\n   \r\n            const estrato =e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            \r\n          \r\n            const id = e.currentTarget.dataset.estratoId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${estrato}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n      \r\n            url = `/api/estratos/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaEstratosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n \r\n        function mostrarEstratos(){\r\n      \r\n            $(\"#tablaEstratos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEstratosData = $('#tablaEstratos').DataTable({\r\n                ajax: '/api/estratos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/estratos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n})();\r\n","\r\n(function(){\r\n   \r\n\r\n    \r\n    const tablaUsuarios = document.querySelector('#tablaUsuarios');\r\n    if(tablaUsuarios){\r\n        let tablaUsuariosData;\r\n        tablaUsuarios.addEventListener('click',function(e){\r\n            leerAccion(e);\r\n        })\r\n\r\n        $('#tablaUsuarios').on('click', '#btn_eliminar_usuario', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarUsuario(e);\r\n        });\r\n    \r\n        \r\n\r\n        mostrarUsuarios();\r\n\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaUsuariosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            \r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_usuario');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n                    \r\n                   eliminarUsuario(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n        function leerAccion(e){\r\n        \r\n            // if(e.target.id=='btn_eliminar_usuario'){\r\n            //     eliminarUsuario(e);\r\n            // }\r\n            if(e.target.id=='btn_cambiar_estado'){\r\n                editarEstado(e);\r\n            }\r\n        }\r\n        function eliminarUsuario(e){\r\n            const nombre = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.usuarioId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar a  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n           \r\n            url = `/api/usuarios/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n              \r\n             \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function editarEstado(e){\r\n           \r\n            const estadoActual = e.target.dataset.estadoActual;\r\n            const nombre = e.target.parentNode.parentNode.children[1].textContent;\r\n            const id = e.target.dataset.usuarioId;\r\n\r\n            let mensajeAlerta = '';\r\n        \r\n            if(estadoActual == 1){\r\n                mensajeAlerta = 'Esta seguro que desea desactivar a';\r\n            }else{\r\n                mensajeAlerta = 'Esta seguro que desea activar a';\r\n            }\r\n        \r\n            \r\n            Swal.fire({\r\n                title: `${mensajeAlerta}  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEstado(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n\r\n        async function enviarInformacionEstado(id){\r\n            url = `/api/usuarios/editar-estado?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n           \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    title: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarUsuarios(){\r\n            $(\"#tablaUsuarios\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuariosData = $('#tablaUsuarios').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n        }\r\n       \r\n    \r\n\r\n    }  \r\n        \r\n   \r\n\r\n \r\n \r\n\r\n\r\n  \r\n})();"]}