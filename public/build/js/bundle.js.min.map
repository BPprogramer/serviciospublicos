{"version":3,"sources":["desabilitarBtnSubmit.js","redireccion.js","cajas/abrir.js","cajas/cajasPagos.js","cajas/index.js","emitidas/index.js","estratos/crear.js","estratos/index.js","pagar/index.js","pagar/pagar.js","dashboard/facturas.js","dashboard/inicio.js","usuarios/index.js","registrados/facturas.js","registrados/index.js","registrados/pagos.js"],"names":["document","querySelector","btnSubmit","addEventListener","e","setTimeout","target","disabled","classList","add","alertaExitoFormulario","formulario","style","display","remove","urlActual","window","location","href","includes","redireccionar","efectivo_inicial","value","efectivo_inicial_sin_formato","parseFloat","replace","isNaN","efectivo_inicial_formateada","toLocaleString","formaterValor","tablaCajasPagos","URL","id","URLSearchParams","search","get","Number","isInteger","parseInt","$","dataTable","fnDestroy","DataTable","ajax","deferRender","retrieve","proccesing","responsive","tablaCajasData","alertaCierre","Swal","fire","title","text","icon","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","async","datos","FormData","append","url","respuesta","fetch","body","method","resultado","json","tipo","mensaje","reload","error","console","log","cerrarCaja","on","this","data","estadoCaja","dataset","cajaId","tablaEmitidasPendientesData","numero_factura","btoa","open","previsualizarFactura","attr","tarifaPlenaInput","porcentajeSubsidioInput","subsidioInput","copagoInput","porcentajeAcuInput","subsidioAcuInput","copagoAcuInput","totalAcuInput","porcentajeAlcInput","subsidioAlcInput","copagoAlcInput","totalAlcInput","porcentajeAseoInput","subsidioAseoInput","copagoAseoInput","totalAseoInput","ajusteInput","porcentajeAjusteInput","tarifa_plena","tarifa_plena_sin_formato","tarifa_plena_formateada","revisarValores","calcularDatos","porcentaje","subsidioInputRef","copagoInputRef","totalInputRef","porcentaje_subsidio","insertarDatos","toFixed","calcularSubsidioCopago","subsidio","copago","referencia1","referencia2","referencia3","total","valor_subsidio","valor_copago","ajuste","valor_ajuste","porcentaje_ajuste","calcularPorcentajeAjuste","tablaEstratosData","eventosClick","querySelectorAll","forEach","btnInfo","currentTarget","estratoId","modal","createElement","innerHTML","estrato","year","facturas_vencidas","porcentaje_copago","preventDefault","contains","appendChild","mostrarInfo","infoEstrato","btnEliminar","eliminarEstrato","parentNode","children","textContent","enviarInformacionEliminar","tablaPagosData","numero_pago","previsualizarPago","anularPago","inputCodigo","contenedorFacturas","guardarPagosBtn","totalFacturas","totalRecaudo","facturas","arreglofacturas","limpiarHtml","firstChild","removeChild","facturaEncontrada","find","factura","pagado","combinado","position","showConfirmButton","timer","registrado_nombre","mes_facturado","saldo_anterior","unshift","subscriptor","tabla","recaudo","cantidadFacturas","tr","tdNumeroFactura","tdRegistrado","tdEstrato","tdMesFacturado","monto","tdCopago","infoFactura","consultarFactura","consultarFacturas","length","arregloPagos","map","JSON","stringify","guardarPagos","btnImprimirFacturas","btnCuentasPorPagar","contenedorSwitch","btnGenerarFacturas","alertaGenerarFacturasAuto","removeEventListener","type","msg","generarFacturas","revisarGeneraAuto","auto","checkbox","checked","onchange","estado","cambiarEstadoAuto","slider","generarCheckBox","eliminarFacturas","origin","subscriptores","subscriptoresVigentes","subscriptoresInactivos","pagosVigentes","fecha","ingreso","ingresosMensuales","totalPagos","totalConsignaciones","selectYear","selectMes","selectYearConsignacion","selectMesConsignacion","consignacionAseo","consignacionAlc","consignacionAcu","total_del_mes","ya_consignado","a_consginar","contenedor_estratos","btnImprimirFacturasFiltradas","leerInputs","consultarIngresosMensuales","leerInputsConsignacion","aseo","acueducto","alcantarillado","a_consignar","imprimirDatosConsignacion","consultarConsignaciones","consultarIngresosFecha","mostrarIngresos","registrados","registrados_activos","registrados_inactivos","pagos_vigentes","ingresos","consignaciones","mostrarResultados","informacionUsuario","fechaActual","Date","toISOString","slice","option","consultarEstratos","tablaUsuarios","tablaUsuariosData","eliminarUsuario","nombre","usuarioId","estadoActual","mensajeAlerta","enviarInformacionEstado","editarEstado","leerAccion","contenedorFactura","nombreCliente","valorDeuda","deuda","imprimirDeuda","fecha_emision","periodo_fin","periodo_inicio","mesActual","getMonth","arregloFecha","split","diferenciaFechas","onclick","seleccionAnterior","seleccionFactura","acciones","accionesContenedor","accionesCliente","clienteLabel","clienteDato","accionesEstrato","estratoLabel","estratoDato","accionesPeriodo","periodoLabel","periodoDato","accionesMonto","montoLabel","montoTotal","montoDato","botonesContenedor","btnVerFactura","btnPagar","btnBanco","pagarFactura","informacionFactura","tdEmitida","tdPeriodo","tdMonto","tdEstado","imprimirResultados","metodo","registrado","metodoDatos","metodoLabel","metodoDato","registradoDatos","registradoLabel","registradoDato","periodoDatos","montoDatos","html","inputHidden","enviarInformacionPagar","tablaRegistradosData","eventosClickEditar","registradoId","eliminarRegistrado","workbook","XLSX","utils","book_new","worksheet","json_to_sheet","book_append_sheet","writeFile","contenedorPagado","consultarPagos","pagos","pago","fecha_pago","seleccionarPago","recaudador","factura_id","accionesRecaudador","recaudadorLabel","recaudadorDato","accionesMetodo","previsualizarComprobante","informacionPago","tdFechaPago","tdNumeroPago","tdPagoAnulado"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n\r\n(function(){\r\n \r\n    const formulario =  document.querySelector('.formulario');\r\n\r\n    if(formulario){\r\n        \r\n        const btnSubmit = document.querySelector('.formulario [type=\"submit\"]');\r\n        if(btnSubmit){\r\n            btnSubmit.addEventListener('click',deshabilitarBoton);\r\n        }\r\n        \r\n       \r\n        function deshabilitarBoton(e){\r\n            setTimeout(()=>{\r\n                e.target.disabled = true;\r\n                e.target.classList.add('formulario__submit--deshabilitado');\r\n            },0)\r\n           \r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n    const alertaExitoFormulario = document.querySelector('.alerta__exito');\r\n    const formulario = document.querySelector('.formulario');\r\n    if(alertaExitoFormulario){\r\n        formulario.style.display='none';\r\n        setTimeout(()=>{\r\n            alertaExitoFormulario.remove();\r\n            redireccionar();\r\n\r\n        },3000);\r\n\r\n        function redireccionar(){\r\n            const urlActual = window.location.href;\r\n            if(urlActual.includes('/admin/usuarios/')){\r\n                window.location.href = '/admin/usuarios';\r\n            }\r\n            if(urlActual.includes('/admin/estratos/')){\r\n                window.location.href = '/admin/estratos';\r\n            }\r\n            if(urlActual.includes('/admin/registrados/')){\r\n                window.location.href = '/admin/registrados';\r\n            }\r\n            if(urlActual.includes('/admin/cajas/')){\r\n                window.location.href = '/admin/cajas';\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n  \r\n","(function(){\r\n    const caja = document.querySelector('#caja');\r\n    if(caja){\r\n        const efectivoInicialInput = document.querySelector('#efectivo_inicial');\r\n        efectivoInicialInput.addEventListener('input',function(e){\r\n            formaterValor(e)\r\n        })\r\n        function formaterValor(e){\r\n        \r\n        \r\n            const efectivo_inicial = e.target.value;\r\n            let efectivo_inicial_sin_formato = parseFloat(efectivo_inicial.replace(/,/g, ''));\r\n            if(isNaN(efectivo_inicial_sin_formato)){\r\n                efectivo_inicial_sin_formato = '';\r\n            }\r\n            const efectivo_inicial_formateada =  efectivo_inicial_sin_formato.toLocaleString('en');\r\n            e.target.value = efectivo_inicial_formateada ;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const infoCaja = document.querySelector('#tablaCajasPagos')\r\n \r\n    if(infoCaja){\r\n        let tablaCajasPagos;\r\n        const urlActual = new URL(window.location);\r\n        const params = new URLSearchParams(urlActual.search);\r\n        const id = params.get('id');\r\n        const infoCaja = document.querySelector('#tablaCajasPagos')\r\n    \r\n       \r\n        mostrarEstratos();\r\n        function mostrarEstratos(){\r\n            \r\n            if(Number.isInteger(parseInt(id))){\r\n         \r\n                $(\"#tablaCajasPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n                tablaCajasPagos = $('#tablaCajasPagos').DataTable({\r\n                    ajax:'/api/cajas/pagos?id='+id,\r\n                    \"deferRender\":true,\r\n                    \"retrieve\":true,\r\n                    \"proccesing\":true,\r\n                    responsive:true\r\n                });\r\n            \r\n                // $.ajax({\r\n                //     url:'/api/cajas/pagos?id='+id,\r\n                    \r\n                //     success:function(req){\r\n                //         console.log(req)\r\n                //     },\r\n                //     error:function(error){\r\n                //         console.log(error.responseText);\r\n                //     }\r\n                    \r\n                // })\r\n              \r\n            }else{\r\n                window.location.href='/admin/cajas'\r\n            }\r\n            \r\n        }\r\n    }\r\n})();","\r\n(function(){\r\n    const tablaCajas = document.querySelector('#tablaCajas');\r\n    if(tablaCajas){\r\n        \r\n\r\n        let tablaCajasData;\r\n\r\n        $('#tablaCajas').on('click', '#estadoCaja', function(e) {\r\n            // Manejar el evento aquí\r\n            const id = $(this).data('cajaId');\r\n            alertaCierre(id);\r\n        });\r\n       \r\n\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n        \r\n            tablaCajasData.on('draw', function(){\r\n                const estadoCaja = document.querySelector('#estadoCaja');\r\n                if(estadoCaja){\r\n\r\n                    estadoCaja.addEventListener('dblclick',function(e){\r\n                   \r\n                        const id = e.target.dataset.cajaId;\r\n                        alertaCierre(id);\r\n                    })\r\n                }\r\n           \r\n            });\r\n        }\r\n\r\n        function alertaCierre(id){\r\n            Swal.fire({\r\n                \r\n                title: 'Esta Seguro de Cerrar esta Caja?',\r\n                text:'Esta acción no se puede deshacer',\r\n                icon:'warning',\r\n                showDenyButton: true,\r\n          \r\n                confirmButtonText: 'Seguro',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                \r\n\r\n                if (result.isConfirmed) {\r\n                 \r\n                   cerrarCaja(id);\r\n                } \r\n              })\r\n        }\r\n\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n   \r\n            try {\r\n                const url = '/api/cajas/cerrar';\r\n                //const url =`${location.origin}/api/cajas/cerrar`;\r\n                //const url = 'http://localhost:3000/api/cajas/cerrar';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'success'){\r\n                    if(resultado.tipo=='error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: resultado.mensaje,\r\n            \r\n                        })\r\n                        return;\r\n                    }\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                      \r\n                        text: resultado.mensaje,\r\n                        \r\n                    })\r\n                    tablaCajasData.ajax.reload(); \r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function mostrarEstratos(){\r\n            $(\"#tablaCajas\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaCajasData = $('#tablaCajas').DataTable({\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n    }\r\n})();\r\n\r\n\r\n","(function(){\r\n    const emitidasPendientes = document.querySelector('#tablaEmitidasPendientes');\r\n    if(emitidasPendientes){\r\n      \r\n        let tablaEmitidasPendientesData;\r\n        mostrarEmitidasPendientes();\r\n        \r\n        $('#tablaEmitidasPendientes').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarFactura($(this).attr('data-numero-factura'))\r\n        });\r\n        \r\n      function previsualizarFactura(numero_factura){\r\n        const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n        // Abre la URL en una nueva pestaña\r\n        window.open(url, '_blank');\r\n      }\r\n\r\n        function mostrarEmitidasPendientes(){\r\n      \r\n            $(\"#tablaEmitidasPendientes\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEmitidasPendientesData = $('#tablaEmitidasPendientes').DataTable({\r\n                ajax: '/api/emitidas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/emitidas',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();","\r\n\r\n(function(){\r\n    const estrato = document.querySelector('#estrato');\r\n    if(estrato){\r\n\r\n        /* Selectores */\r\n        const tarifaPlenaInput= document.querySelector('#tarifa_plena');\r\n        const porcentajeSubsidioInput = document.querySelector('#porcentaje_subsidio');\r\n        const subsidioInput= document.querySelector('#subsidio') ;\r\n        const copagoInput = document.querySelector('#copago')\r\n\r\n        const porcentajeAcuInput= document.querySelector('#porcentaje_acu');\r\n        const subsidioAcuInput= document.querySelector('#subsidio_acu') ;\r\n        const copagoAcuInput = document.querySelector('#copago_acu');\r\n        const totalAcuInput = document.querySelector('#tarifa_plena_acu')\r\n\r\n        const porcentajeAlcInput = document.querySelector('#porcentaje_alc');\r\n        const subsidioAlcInput= document.querySelector('#subsidio_alc') ;\r\n        const copagoAlcInput = document.querySelector('#copago_alc');\r\n        const totalAlcInput = document.querySelector('#tarifa_plena_alc')\r\n        \r\n\r\n        const porcentajeAseoInput = document.querySelector('#porcentaje_aseo');\r\n        const subsidioAseoInput= document.querySelector('#subsidio_aseo') ;\r\n        const copagoAseoInput = document.querySelector('#copago_aseo');\r\n        const totalAseoInput = document.querySelector('#tarifa_plena_aseo')\r\n\r\n        const ajusteInput = document.querySelector('#ajuste');\r\n        const porcentajeAjusteInput = document.querySelector('#porcentaje_ajuste');\r\n\r\n        /* Eventos */\r\n\r\n        tarifaPlenaInput.addEventListener('input',function(e){\r\n            formaterValor(e);\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n        porcentajeSubsidioInput.addEventListener('input',function(e){\r\n            const porcentaje = parseFloat(e.target.value)\r\n            if(porcentaje<0 || porcentaje>100){\r\n              \r\n                e.target.value = '';\r\n            }\r\n            calcularSubsidioCopago();\r\n            revisarValores();\r\n            ajusteInput.value = '';\r\n            porcentajeAjusteInput.value = '';\r\n        \r\n        })\r\n\r\n\r\n        porcentajeAcuInput.addEventListener('input',function(e){\r\n        \r\n          \r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n          \r\n            const porcentaje = (e.target.value)/100;\r\n     \r\n            calcularDatos(porcentaje,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n          \r\n          \r\n        })\r\n        porcentajeAlcInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n    \r\n          \r\n        })\r\n        porcentajeAseoInput.addEventListener('input',function(e){\r\n            if(((e.target.value)*1)<0 || ((e.target.value)*1)>100){\r\n             \r\n                e.target.value = '';\r\n            }\r\n            const porcentaje = (e.target.value)/100;\r\n            calcularDatos(porcentaje,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n          \r\n        })\r\n\r\n\r\n\r\n\r\n        porcentajeAjusteInput.addEventListener('input',calcularValorAjuste)\r\n        \r\n        ajusteInput.addEventListener('input',function(e){\r\n            calcularPorcentajeAjuste()\r\n            formaterValor(e);\r\n         \r\n          \r\n        })\r\n\r\n        /* Funciones */\r\n\r\n        function formaterValor(e){\r\n            const tarifa_plena = e.target.value;\r\n            let tarifa_plena_sin_formato = parseFloat(tarifa_plena.replace(/,/g, ''));\r\n            if(isNaN(tarifa_plena_sin_formato)){\r\n                tarifa_plena_sin_formato = '';\r\n            }\r\n            const tarifa_plena_formateada =  tarifa_plena_sin_formato.toLocaleString('en');\r\n            e.target.value = tarifa_plena_formateada ;\r\n        }\r\n\r\n        function calcularValorAjuste(){\r\n\r\n            if(((porcentajeAjusteInput.value)*1)<0 || ((porcentajeAjusteInput.value)*1)>100){\r\n                porcentajeAjusteInput.value = '';\r\n            }\r\n            if(copagoInput.value!='' && porcentajeAjusteInput.value !='' && copagoInput.value!=0){\r\n                const copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n                const ajuste = ((porcentajeAjusteInput.value/100)*copago).toFixed(2);\r\n                ajusteInput.value = (parseFloat(ajuste)).toLocaleString('en');\r\n \r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n        }\r\n    \r\n        function calcularPorcentajeAjuste(){\r\n      \r\n            if(copagoInput.value!='' && ajusteInput.value !='' && copagoInput.value!=0){\r\n                const valor_ajuste = parseFloat(ajusteInput.value.replace(/,/g, ''));\r\n                const valor_copago = parseFloat(copagoInput.value.replace(/,/g, ''));\r\n\r\n                if(valor_ajuste>valor_copago){\r\n                    ajusteInput.value = '';\r\n                    porcentajeAjusteInput.value = '';\r\n                    return;\r\n                }\r\n\r\n                const porcentaje_ajuste = (((valor_ajuste*100)/valor_copago).toFixed(2))*1;\r\n                porcentajeAjusteInput.value = porcentaje_ajuste;\r\n              \r\n            }else{\r\n                ajusteInput.value = '';\r\n                porcentajeAjusteInput.value = '';\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        function revisarValores(){\r\n\r\n   \r\n           \r\n            calcularDatos(porcentajeAcuInput.value/100,subsidioAcuInput, copagoAcuInput,totalAcuInput);\r\n            calcularDatos(porcentajeAlcInput.value/100,subsidioAlcInput, copagoAlcInput,totalAlcInput);\r\n            calcularDatos(porcentajeAseoInput.value/100,subsidioAseoInput, copagoAseoInput,totalAseoInput);\r\n     \r\n        }\r\n     \r\n        function calcularDatos(porcentaje,subsidioInputRef, copagoInputRef,totalInputRef){\r\n         \r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n            const porcentaje_subsidio = (porcentajeSubsidioInput.value)/100;\r\n        \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0 && porcentaje >=0){\r\n              \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n            \r\n                const subsidio = tarifa_plena*porcentaje_subsidio*porcentaje;\r\n                const copago = (((tarifa_plena*(1-porcentaje_subsidio))*porcentaje).toFixed(2))*1;\r\n                const totalValor = tarifa_plena*porcentaje;\r\n                const total = totalValor.toLocaleString('en');\r\n              \r\n                insertarDatos(subsidio, copago, subsidioInputRef, copagoInputRef,totalInputRef,total);\r\n            }else{\r\n                subsidioInputRef.value=0;\r\n                copagoInputRef.value=0;\r\n                totalInputRef.value=0;\r\n            }\r\n\r\n        }\r\n\r\n       \r\n\r\n        function calcularSubsidioCopago(){\r\n            const tarifa_plena_formateada = tarifaPlenaInput.value;\r\n\r\n            const porcentaje_subsidio = parseFloat((porcentajeSubsidioInput.value)/100);\r\n            \r\n          \r\n            if(tarifa_plena_formateada!='' && porcentaje_subsidio>=0){\r\n               \r\n                const tarifa_plena = parseFloat(tarifa_plena_formateada.replace(/,/g, ''));\r\n                const subsidio = tarifa_plena*porcentaje_subsidio;\r\n                const copago = ((tarifa_plena*(1-porcentaje_subsidio)).toFixed(2))*1;\r\n          \r\n                insertarDatos(subsidio, copago, subsidioInput, copagoInput);\r\n            }else{\r\n              \r\n                subsidioInput.value = '' ;\r\n                copagoInput.value = '';\r\n            }\r\n        }\r\n\r\n        function insertarDatos(subsidio, copago, referencia1, referencia2, referencia3=[] , total= ''){\r\n            if(total!=''){\r\n               referencia3.value = total;\r\n            }\r\n            const valor_subsidio = subsidio.toLocaleString('en');\r\n            const valor_copago = copago.toLocaleString('en');\r\n            referencia1.value = valor_subsidio\r\n            referencia2.value = valor_copago\r\n           \r\n        }\r\n        \r\n    }\r\n})();","\r\n(function(){\r\n\r\n\r\n    const tablaEstratos = document.querySelector('#tablaEstratos');\r\n\r\n    if(tablaEstratos){\r\n\r\n        $('#tablaEstratos').on('click', '#btn_eliminar_estrato', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarEstrato(e);\r\n        });\r\n\r\n        let tablaEstratosData;\r\n        mostrarEstratos();\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaEstratosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            const btnsInfo = document.querySelectorAll('#btn_info_estrato');\r\n            \r\n            btnsInfo.forEach(btnInfo=>{\r\n                btnInfo.addEventListener('click', function(e){\r\n                  \r\n                    infoEstrato(e);\r\n                })\r\n            })\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_estrato');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n             \r\n                    eliminarEstrato(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n      \r\n\r\n        async function infoEstrato(e){\r\n            const id = e.currentTarget.dataset.estratoId;\r\n            const url = `/api/estratos/info?id=${id}`;\r\n  \r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                \r\n                if(resultado.tipo == 'error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n\r\n        function mostrarInfo(resultado){\r\n  \r\n\r\n            const modal = document.createElement('DIV');\r\n            modal.classList.add('modal');\r\n            modal.innerHTML = `\r\n                <div class=\"modal__informacion\" id=\"info\">\r\n                    <h3>Información del Estrato </h3>\r\n                    \r\n                    <ul class=\"modal__lista\">\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                           \r\n                            <p class=\"modal__info\">Estrato: <span>${resultado.estrato}</span></p>\r\n                            <p class=\"modal__info\">Año Vigente: <span>${resultado.year}</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena: <span>${parseFloat((resultado.tarifa_plena)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Número de Facturas Vencidas: <span>${resultado.facturas_vencidas}</span></p>\r\n        \r\n                         </li>\r\n                   \r\n\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Subsidio: <span>${resultado.porcentaje_subsidio}%</span></p>\r\n                            <p class=\"modal__info\">Porcentaje Copago: <span>${resultado.porcentaje_copago}%</span></p>\r\n                            <p class=\"modal__info\">Subsidio: <span>${parseFloat((resultado.subsidio)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Copago: <span>${parseFloat((resultado.copago)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                        \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Acueducto: <span>${parseFloat((resultado.porcentaje_acu)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Acueducto: <span>${parseFloat((resultado.tarifa_plena_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Acueducto: <span>${parseFloat((resultado.subsidio_acu)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Acueducto : <span>${parseFloat((resultado.copago_acu)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Alcantarillado: <span>${parseFloat((resultado.porcentaje_alc)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Alcantarillado: <span>${parseFloat((resultado.tarifa_plena_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Alcantarillado: <span>${parseFloat((resultado.subsidio_alc)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Alcantarillado : <span>${parseFloat((resultado.copago_alc)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         \r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Aseo: <span>${parseFloat((resultado.porcentaje_aseo)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Aseo: <span>${parseFloat((resultado.tarifa_plena_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Subsidio Aseo: <span>${parseFloat((resultado.subsidio_aseo)).toLocaleString('en')}</span></p>\r\n                            <p class=\"modal__info\">Valor Copago Aseo : <span>${parseFloat((resultado.copago_aseo)).toLocaleString('en')}</span></p>\r\n                         </li>\r\n                         <li class=\"modal__elemento modal__elemento--grid\">\r\n                            <p class=\"modal__info\">Porcentaje Ajuste: <span>${parseFloat((resultado.porcentaje_ajuste)).toLocaleString('en')}%</span></p>\r\n                            <p class=\"modal__info\">Tarifa Plena Ajuste: <span>${parseFloat((resultado.ajuste)).toLocaleString('en')}</span></p>\r\n                           \r\n                         </li>\r\n                         \r\n                        \r\n                    </ul>\r\n\r\n                    <div class=\"modal__opciones\">\r\n                      \r\n             \r\n                      \r\n                        <button type=\"button\" class=\"modal__cerrar-modal\">Cerrar</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            `\r\n            setTimeout(()=>{\r\n                const info = document.querySelector('#info');\r\n                info.classList.add('modal__informacion--animar');\r\n            },10)\r\n            modal.addEventListener('click',function(e){\r\n                e.preventDefault();\r\n                if(e.target.classList.contains('modal__cerrar-modal')){\r\n                    const info = document.querySelector('#info');\r\n                    info.classList.add('modal__informacion--cerrar');\r\n                    setTimeout(()=>{\r\n                        modal.remove();\r\n                        \r\n                       \r\n                    },500)\r\n                }\r\n               \r\n           \r\n            })\r\n\r\n            document.querySelector('.dashboard__contenedor').appendChild(modal);\r\n        }\r\n\r\n        function eliminarEstrato(e){\r\n   \r\n            const estrato =e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            \r\n          \r\n            const id = e.currentTarget.dataset.estratoId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${estrato}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n      \r\n            url = `/api/estratos/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaEstratosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n \r\n        function mostrarEstratos(){\r\n      \r\n            $(\"#tablaEstratos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEstratosData = $('#tablaEstratos').DataTable({\r\n                ajax: '/api/estratos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/estratos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n})();\r\n","(function(){\r\n    const tablaPagos = document.querySelector('#tablaPagos');\r\n    if(tablaPagos){\r\n\r\n   \r\n        let tablaPagosData;\r\n        mostraroPagos();\r\n\r\n        $('#tablaPagos').on('click', '#btn_previsualizar', function(e) {\r\n            // Manejar el evento aquí\r\n       \r\n            previsualizarPago($(this).attr('data-numero-pago'))\r\n        });\r\n        $('#tablaPagos').on('click', '#btn_anular', function(e) {\r\n            // Manejar el evento aquí\r\n            eliminarPagoAlerta($(this).attr('data-numero-pago'));\r\n            // Resto del código\r\n        });\r\n\r\n        \r\n      \r\n        \r\n      \r\n        function previsualizarPago(numero_pago){\r\n            const url =`/api/previsualizar-pago?key=${btoa(numero_pago)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n        }\r\n        function eliminarPagoAlerta(numero_pago){\r\n                  \r\n            Swal.fire({\r\n                title: `Esta seguro que desea anular el pago # ${numero_pago}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    anularPago(numero_pago);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function anularPago(numero_pago){\r\n            const datos = new FormData();\r\n            datos.append('numero_pago', numero_pago);\r\n            \r\n            \r\n            const url = '/api/anular-pago';\r\n            try {\r\n                const respuesta = await  fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaPagosData.ajax.reload(); \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostraroPagos(){\r\n      \r\n            $(\"#tablaPagos\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n        \r\n            tablaPagosData = $('#tablaPagos').DataTable({\r\n                ajax: '/api/lista-pagos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/lista-pagos',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","\r\n\r\n(function () {\r\n    const contenedorPagar = document.querySelector('#contenedorPagar');\r\n    if (contenedorPagar) {\r\n        const inputCodigo = document.querySelector('#numero_factura');\r\n        const contenedorFacturas = document.querySelector('#pagarFacturas');\r\n        const guardarPagosBtn = document.querySelector('#guardarPagos');\r\n        const totalFacturas = document.querySelector('#totalFacturas');\r\n        const totalRecaudo = document.querySelector('#totalRecaudo');\r\n\r\n        let facturas;\r\n        let arreglofacturas = []\r\n        consultarFacturas()\r\n        guardarPagosBtn.addEventListener('click', confirmarPagos);\r\n\r\n        async function guardarPagos() {\r\n            const datos = new FormData();\r\n\r\n            const arregloPagos = arreglofacturas.map(factura => factura.id);\r\n\r\n            datos.append('pagos', JSON.stringify(arregloPagos));\r\n            try {\r\n                const respuesta = await fetch('/api/subir-pagos', {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                if (resultado.tipo == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops',\r\n                        text: resultado.mensaje\r\n                    })\r\n                } else {\r\n                    limpiarHtml();\r\n                    totalFacturas.textContent = 0;\r\n                    totalRecaudo.textContent = '$0'\r\n                    arreglofacturas = [];\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n\r\n                        text: resultado.mensaje\r\n                    })\r\n\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function confirmarPagos() {\r\n            if (arreglofacturas.length > 0) {\r\n                Swal.fire({\r\n                    title: `Esta seguro que desea subir ${totalFacturas.textContent} Pagos por ${totalRecaudo.textContent}`,\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        guardarPagos();\r\n\r\n                        //Swal.fire('Saved!', '', 'success')\r\n                    }\r\n                })\r\n            } else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Debe agregar al menos una factura',\r\n                    'error'\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        function infoFactura(facturaEncontrada) {\r\n\r\n            if (arreglofacturas.find(factura => factura.id === facturaEncontrada.id)) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ya fue agregada a la fila de pagos',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n\r\n            } else if (facturaEncontrada.pagado == 1) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ya ha sido cancelada',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n\r\n            } else if (facturaEncontrada.combinado == 1) {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'La Factura ha sido combinada',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n            } else if (facturaEncontrada.estrato == \"TEMPORALES\") {\r\n                setTimeout(() => {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Estrato Temporales no admitido ',\r\n                        'error'\r\n                    )\r\n                    return;\r\n                }, 1)\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Factura agregada a la pila',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n\r\n                const { id, numero_factura, registrado_nombre, estrato, mes_facturado, copago, ajuste, saldo_anterior } = facturaEncontrada;\r\n                arreglofacturas.unshift({\r\n                    numero_factura: numero_factura,\r\n                    subscriptor: registrado_nombre,\r\n                    estrato: estrato,\r\n                    mes_facturado: mes_facturado,\r\n                    copago: copago,\r\n                    ajuste: ajuste,\r\n                    saldo_anterior: saldo_anterior,\r\n                    id: id\r\n\r\n\r\n                })\r\n\r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                limpiarHtml();\r\n                let recaudo = 0;\r\n                let cantidadFacturas = 0;\r\n                arreglofacturas.forEach(factura => {\r\n\r\n                    const { numero_factura, subscriptor, estrato, mes_facturado, copago, ajuste, saldo_anterior } = factura;\r\n\r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdRegistrado = document.createElement('TD');\r\n                    tdRegistrado.classList.add('table__td');\r\n                    tdRegistrado.innerHTML = `<span class=\"table__span\">Cliente:&nbsp; </span>&nbsp; ${subscriptor}`;\r\n\r\n                    const tdEstrato = document.createElement('TD');\r\n                    tdEstrato.classList.add('table__td');\r\n                    tdEstrato.innerHTML = `<span class=\"table__span\">Estrato:&nbsp; </span>&nbsp; ${estrato}`\r\n\r\n                    const tdMesFacturado = document.createElement('TD');\r\n                    tdMesFacturado.classList.add('table__td');\r\n                    tdMesFacturado.innerHTML = `<span class=\"table__span\">Mes Facturado:&nbsp; </span>&nbsp; ${mes_facturado}`\r\n\r\n                    let monto = parseFloat(copago) + parseFloat(saldo_anterior) - parseFloat(ajuste)\r\n\r\n                    const tdCopago = document.createElement('TD');\r\n                    tdCopago.classList.add('table__td');\r\n                    tdCopago.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto.toLocaleString('en')}`\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdRegistrado)\r\n                    tr.appendChild(tdEstrato)\r\n                    tr.appendChild(tdMesFacturado)\r\n                    tr.appendChild(tdCopago)\r\n                    tabla.appendChild(tr);\r\n                    recaudo = recaudo + monto;\r\n                    cantidadFacturas = cantidadFacturas + 1;\r\n\r\n                })\r\n\r\n                totalFacturas.textContent = cantidadFacturas\r\n                totalRecaudo.textContent = '$' + recaudo.toLocaleString('en')\r\n\r\n                contenedorFacturas.appendChild(tabla)\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        function consultarFactura(e) {\r\n            const numero_factura = e.target.value\r\n\r\n\r\n            const facturaEncontrada = facturas.find(factura => factura.numero_factura === numero_factura);\r\n            if (facturaEncontrada) {\r\n                inputCodigo.value = '';\r\n                infoFactura(facturaEncontrada);\r\n            }\r\n        }\r\n\r\n        function agregarEventos() {\r\n\r\n            inputCodigo.addEventListener('input', function (e) {\r\n\r\n\r\n                consultarFactura(e);\r\n            })\r\n        }\r\n\r\n\r\n\r\n        async function consultarFacturas() {\r\n            try {\r\n                const resultado = await fetch('/api/facturas-por-pagar');\r\n                const respuesta = await resultado.json();\r\n                facturas = respuesta;\r\n\r\n\r\n                agregarEventos();\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function limpiarHtml() {\r\n            while (contenedorFacturas.firstChild) {\r\n                contenedorFacturas.removeChild(contenedorFacturas.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n})();","\r\n\r\n(function(){\r\n    \r\n    const btnImprimirFacturas = document.querySelector('#btnImprimirFacturas');\r\n    if(btnImprimirFacturas){\r\n\r\n       \r\n        const btnCuentasPorPagar = document.querySelector('#btnCuentasPorPagar');\r\n\r\n        const contenedorSwitch = document.querySelector('#switch');\r\n        const btnGenerarFacturas = document.querySelector('#btnGenerarFacturas');\r\n     \r\n        const btnEliminarFacturas  = document.querySelector('#btnEliminarFacturas');\r\n\r\n        btnEliminarFacturas.addEventListener('click',alertaEliminarFacturas)\r\n       \r\n\r\n        revisarGeneraAuto();\r\n\r\n        function alertaEliminarFacturas(){\r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    eliminarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function eliminarFacturas(){\r\n            try {\r\n                const respuesta = await fetch('/api/eliminar-facturas');\r\n                const resultado = await respuesta.json();\r\n             \r\n                Swal.fire({\r\n                    icon: resultado.type,\r\n        \r\n                    text: resultado.msg\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        btnImprimirFacturas.addEventListener('click',function(){\r\n            const url = '/api/facturas'\r\n            //const url = `${location.origin}/api/facturas`\r\n            window.open(url, '_blank');\r\n        })\r\n\r\n        btnCuentasPorPagar.addEventListener('click',function(){\r\n            console.log('click en ver cuentas')\r\n            //const url = '/api/cuentas-por-pagar'\r\n            const url = `${location.origin}/api/cuentas-por-pagar`\r\n            window.open(url, '_blank');\r\n        })\r\n\r\n        function alertaGenerarFacturasAuto(){\r\n         \r\n            Swal.fire({\r\n                title: 'Esta seguro de generar las facturas de este mes?',\r\n              \r\n             \r\n                showDenyButton: true,\r\n                confirmButtonText: 'Generar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                     generarFacturas();\r\n                }\r\n              })\r\n        }\r\n\r\n        async function generarFacturas(){\r\n            btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n            btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n              \r\n            try {\r\n                const respuesta = await fetch(`/api/generar-facturas-manual`);\r\n    \r\n                const resultado = await respuesta.json()\r\n                console.log(resultado)\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n                    Swal.fire({\r\n                        icon: resultado.type,\r\n            \r\n                        text: resultado.msg\r\n                    })\r\n     \r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        async function cambiarEstadoAuto(estado){\r\n            let auto;\r\n            if(estado){\r\n                auto = 1;\r\n            }else{\r\n                auto = 0;\r\n            }\r\n\r\n\r\n\r\n      \r\n            const datos = new FormData();\r\n            datos.append('id',1)\r\n            datos.append('auto',auto);\r\n\r\n            const url = `/api/generar-auto`;\r\n           \r\n            try {\r\n                await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n          \r\n             \r\n                revisarGeneraAuto()\r\n            \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        async function revisarGeneraAuto(){\r\n\r\n\r\n         \r\n            try {\r\n                const respuesta = await fetch('/api/generar-auto');\r\n               \r\n                const resultado = await respuesta.json()\r\n               \r\n                const auto = resultado.auto;\r\n                generarCheckBox(auto);\r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n    \r\n        }\r\n\r\n        function generarCheckBox(auto){\r\n            const checkbox = document.createElement('INPUT')\r\n            checkbox.type=\"checkbox\"\r\n            checkbox.id = \"checkbox\";\r\n        \r\n            if(btnGenerarFacturas.classList.contains('inicio__boton-generar--inactivo')){\r\n                btnGenerarFacturas.classList.remove('inicio__boton-generar--inactivo')\r\n            }\r\n            if(auto==1){\r\n                checkbox.checked = true\r\n                btnGenerarFacturas.classList.add('inicio__boton-generar--inactivo');\r\n                btnGenerarFacturas.removeEventListener('click', alertaGenerarFacturasAuto)\r\n\r\n                \r\n            }else{\r\n                checkbox.checked = false\r\n                btnGenerarFacturas.addEventListener('click', alertaGenerarFacturasAuto)\r\n            \r\n            }\r\n            checkbox.onchange = function(){\r\n                setTimeout(()=>{\r\n                    cambiarEstadoAuto(checkbox.checked)\r\n                },300)\r\n                \r\n            }\r\n            \r\n            const slider = document.createElement('DIV')\r\n \r\n            slider.classList.add('slider', 'round');\r\n            contenedorSwitch.appendChild(checkbox)\r\n            contenedorSwitch.appendChild(slider)\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n","\r\n        \r\n(function(){\r\n    document.addEventListener(\"DOMContentLoaded\", function(){\r\n        const caja = document.querySelector('#cajas');\r\n    if(caja){\r\n\r\n        const subscriptores = document.querySelector('#subscriptores');\r\n        const subscriptoresVigentes = document.querySelector('#subscriptoresVigentes');\r\n        const subscriptoresInactivos = document.querySelector('#subscriptoresInactivos');\r\n        const pagosVigentes = document.querySelector('#pagosVigentes');\r\n        const fecha = document.querySelector('#fecha');\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const ingresosMensuales = document.querySelector('#ingresosMensuales');\r\n        const totalPagos = document.querySelector('#totalPagos');\r\n        const totalConsignaciones = document.querySelector('#totalConsignaciones');\r\n        const selectYear = document.querySelector('#year');\r\n        const selectMes = document.querySelector('#mes');\r\n\r\n        //selects para la consignacion\r\n        const selectYearConsignacion = document.querySelector('#year_consignacion')\r\n        const selectMesConsignacion = document.querySelector('#mes_consignacion')\r\n\r\n\r\n        const consignacionAseo = document.querySelector('#consignacionAseo')\r\n        const consignacionAlc = document.querySelector('#consignacionAlc')\r\n        const consignacionAcu = document.querySelector('#consignacionAcu')\r\n        const total_del_mes = document.querySelector('#total_del_mes')\r\n        const ya_consignado = document.querySelector('#ya_consignado')\r\n        const a_consginar = document.querySelector('#a_consignar')\r\n\r\n        const contenedor_estratos = document.querySelector('#estratos');\r\n        const btnImprimirFacturasFiltradas = document.querySelector('#btnImprimirFacturasFiltradas');\r\n     \r\n\r\n\r\n        \r\n\r\n        selectYear.addEventListener('change',leerInputs);\r\n        selectMes.addEventListener('change',leerInputs);\r\n\r\n        selectYearConsignacion.addEventListener('change',leerInputsConsignacion);\r\n        selectMesConsignacion.addEventListener('change',leerInputsConsignacion);\r\n\r\n\r\n\r\n        informacionUsuario();\r\n        fechaActual();\r\n        leerInputs();\r\n        consultarEstratos();\r\n\r\n       \r\n\r\n        btnImprimirFacturasFiltradas.addEventListener('click',function(e){\r\n            const estratoId = contenedor_estratos.value;\r\n            if(estratoId==0){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n        \r\n                    text: 'Porfavor seleccione un estrato'\r\n                })\r\n            }else{\r\n                const url = `/api/facturas?estratos-key=${btoa(estratoId)}`\r\n                //const url = `${location.origin}/api/facturas`\r\n                window.open(url, '_blank');\r\n            }\r\n        })\r\n\r\n        fecha.addEventListener('change',function(e){\r\n            const fechaSeleccionada = e.target.value;\r\n            consultarIngresosFecha(fechaSeleccionada)\r\n        })\r\n     \r\n        async function consultarEstratos(){\r\n            const url = `${location.origin}/api/estratos-all`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarEstratos(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarEstratos(estratos){\r\n     \r\n            estratos.forEach(estrato => {\r\n                const option = document.createElement('OPTION');\r\n                option.value=estrato.id\r\n                option.textContent = estrato.estrato\r\n                contenedor_estratos.appendChild(option)\r\n            });\r\n        }\r\n\r\n        function leerInputs(){\r\n            const year = selectYear.value;\r\n            const mes = selectMes.value;\r\n            const fecha = year+\"-\"+mes;\r\n            consultarIngresosMensuales(fecha);\r\n        }\r\n        function leerInputsConsignacion(){\r\n            const year = selectYearConsignacion.value;\r\n            const mes = selectMesConsignacion.value;\r\n            const fecha = year+\"-\"+mes;\r\n      \r\n       \r\n            consultarConsignaciones(fecha);\r\n        }\r\n\r\n        async function consultarIngresosMensuales(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/ingresos-mensuales';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                ingresosMensuales.textContent = '$'+resultado;\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        async function consultarConsignaciones(fecha){\r\n        \r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = '/api/inicio/consignaciones';\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n        \r\n                imprimirDatosConsignacion(resultado);\r\n\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function imprimirDatosConsignacion(resultado){\r\n      \r\n            consignacionAseo.textContent = '';\r\n            consignacionAcu.textContent = '';\r\n            consignacionAlc.textContent = '';\r\n            total_del_mes.textContent = '';\r\n            ya_consignado.textContent = '';\r\n\r\n            a_consginar.textContent = '';\r\n         \r\n        \r\n            consignacionAseo.textContent = '$'+(resultado.aseo||0);\r\n            consignacionAcu.textContent = '$'+(resultado.acueducto || 0);\r\n            consignacionAlc.textContent = '$'+(resultado.alcantarillado || 0);\r\n            total_del_mes.textContent = '$'+(resultado.total_del_mes || 0);\r\n            ya_consignado.textContent = '$'+(resultado.ya_consignado || 0);\r\n            a_consginar.textContent = '$'+(resultado.a_consignar || 0);\r\n        }\r\n\r\n        async function informacionUsuario(){\r\n            try {\r\n                const respuesta = await fetch('/api/inicio/registrados');\r\n                const resultado = await respuesta.json();\r\n                mostrarResultados(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function mostrarResultados(resultado){\r\n            \r\n            const {registrados, registrados_activos, registrados_inactivos, pagos_vigentes, ingresos, consignaciones} = resultado;\r\n            subscriptores.textContent = registrados;\r\n            subscriptoresVigentes.textContent = registrados_activos;\r\n            subscriptoresInactivos.textContent = registrados_inactivos;\r\n            pagosVigentes.textContent = pagos_vigentes;\r\n            totalPagos.textContent = '$'+ingresos\r\n            totalConsignaciones.textContent = '$'+consignaciones\r\n\r\n        }\r\n        \r\n\r\n        function fechaActual(){\r\n            const fechaActual = new Date().toISOString().slice(0, 10);\r\n            fecha.value = fechaActual;\r\n            consultarIngresosFecha(fechaActual);\r\n        }\r\n        async function consultarIngresosFecha(fecha){\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n       \r\n            try {\r\n                const respuesta = await fetch('/api/inicio/fecha', {\r\n                    body:datos,\r\n                    method:'POST'\r\n                });\r\n                const resultado = await respuesta.json();\r\n                mostrarIngresos(resultado);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function mostrarIngresos(resultado){\r\n            ingreso.textContent = '$'+resultado\r\n        }\r\n\r\n        let data = [\r\n            {\r\n              sheet: \"Adults\",\r\n              columns: [\r\n                { label: \"User\", value: \"user\" }, // Top level data\r\n                { label: \"Age\", value: (row) => row.age + \" years\" }, // Custom format\r\n                { label: \"Phone\", value: (row) => (row.more ? row.more.phone || \"\" : \"\") }, // Run functions\r\n              ],\r\n              content: [\r\n                { user: \"Andrea\", age: 20, more: { phone: \"11111111\" } },\r\n                { user: \"Luis\", age: 21, more: { phone: \"12345678\" } },\r\n              ],\r\n            },\r\n            {\r\n              sheet: \"Children\",\r\n              columns: [\r\n                { label: \"User\", value: \"user\" }, // Top level data\r\n                { label: \"Age\", value: \"age\", format: '# \"years\"' }, // Column format\r\n                { label: \"Phone\", value: \"user.more.phone\", format: \"(###) ###-####\" }, // Deep props and column format\r\n              ],\r\n              content: [\r\n                { user: \"Manuel\", age: 16, more: { phone: 9999999900 } },\r\n                { user: \"Ana\", age: 17, more: { phone: 8765432135 } },\r\n              ],\r\n            },\r\n          ]\r\n          \r\n          let settings = {\r\n            fileName: \"MySpreadsheet\", // Name of the resulting spreadsheet\r\n            extraLength: 3, // A bigger number means that columns will be wider\r\n            writeOptions: {}, // Style options from https://github.com/SheetJS/sheetjs#writing-options\r\n          }\r\n          \r\n      \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    })\r\n    \r\n\r\n})();","\r\n(function(){\r\n   \r\n\r\n    \r\n    const tablaUsuarios = document.querySelector('#tablaUsuarios');\r\n    if(tablaUsuarios){\r\n        let tablaUsuariosData;\r\n        tablaUsuarios.addEventListener('click',function(e){\r\n            leerAccion(e);\r\n        })\r\n\r\n        $('#tablaUsuarios').on('click', '#btn_eliminar_usuario', function(e) {\r\n            // Manejar el evento aquí\r\n      \r\n            eliminarUsuario(e);\r\n        });\r\n    \r\n        \r\n\r\n        mostrarUsuarios();\r\n\r\n        verificarCargaTabla();\r\n        function verificarCargaTabla(){\r\n      \r\n            tablaUsuariosData.on('draw', eventosClick);\r\n        }\r\n\r\n        function eventosClick(){\r\n\r\n            \r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_usuario');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                   // console.log(e.currentTarget)\r\n                    \r\n                   eliminarUsuario(e);\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n        function leerAccion(e){\r\n        \r\n            // if(e.target.id=='btn_eliminar_usuario'){\r\n            //     eliminarUsuario(e);\r\n            // }\r\n            if(e.target.id=='btn_cambiar_estado'){\r\n                editarEstado(e);\r\n            }\r\n        }\r\n        function eliminarUsuario(e){\r\n            const nombre = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.usuarioId;\r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar a  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n           \r\n            url = `/api/usuarios/eliminar?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n              \r\n             \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function editarEstado(e){\r\n           \r\n            const estadoActual = e.target.dataset.estadoActual;\r\n            const nombre = e.target.parentNode.parentNode.children[1].textContent;\r\n            const id = e.target.dataset.usuarioId;\r\n\r\n            let mensajeAlerta = '';\r\n        \r\n            if(estadoActual == 1){\r\n                mensajeAlerta = 'Esta seguro que desea desactivar a';\r\n            }else{\r\n                mensajeAlerta = 'Esta seguro que desea activar a';\r\n            }\r\n        \r\n            \r\n            Swal.fire({\r\n                title: `${mensajeAlerta}  ${nombre}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    enviarInformacionEstado(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n\r\n        async function enviarInformacionEstado(id){\r\n            url = `/api/usuarios/editar-estado?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n           \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    title: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaUsuariosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarUsuarios(){\r\n            $(\"#tablaUsuarios\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuariosData = $('#tablaUsuarios').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n        }\r\n       \r\n    \r\n\r\n    }  \r\n        \r\n   \r\n\r\n \r\n \r\n\r\n\r\n  \r\n})();","\r\n\r\n(function(){\r\n    const contenedorFactura = document.querySelector('#facturas');\r\n    if(contenedorFactura){\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n           \r\n            consultarFacturas();\r\n\r\n            async function consultarFacturas(){\r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    const url = '/api/facturas-registrado'\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const resultado = await respuesta.json();\r\n             \r\n                    if(resultado){\r\n                  \r\n                        imprimirDeuda(resultado.deuda);\r\n                        imprimirResultados(resultado.facturas);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            function imprimirDeuda(valorDeuda){\r\n                const deuda = document.querySelector('#deuda')\r\n                deuda.classList = [];\r\n                deuda.classList.add('deuda__valor')\r\n                if(valorDeuda==0){\r\n                    \r\n                    deuda.classList.add('deuda__valor--pagado')\r\n                }else{\r\n                    deuda.classList.add('deuda__valor--vencido')\r\n                }\r\n                deuda.textContent = `$ ${valorDeuda.toLocaleString('en')}`\r\n            }\r\n\r\n            function imprimirResultados(facturas){\r\n                \r\n\r\n                \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                facturas.forEach(factura => {\r\n  \r\n                    const {id, numero_factura, fecha_emision, periodo_fin, periodo_inicio, copago, pagado, ajuste, combinado, saldo_anterior} = factura\r\n                    const dateFechaActual = new Date();\r\n                    const mesActual = dateFechaActual.getMonth()+1;\r\n                 \r\n                    const arregloFecha = fecha_emision.split('-');\r\n                    const mesEmision = parseFloat(arregloFecha[1])\r\n                    \r\n                   \r\n                   const diferenciaFechas = mesActual - mesEmision;\r\n                    \r\n            \r\n                   \r\n                \r\n              \r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionFactura(e);\r\n                        informacionFactura(factura);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdEmitida = document.createElement('TD');\r\n                    tdEmitida.classList.add('table__td');\r\n                    tdEmitida.innerHTML = `<span class=\"table__span\">Emitida:&nbsp; </span>&nbsp; ${fecha_emision}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${parseFloat(montoTotal).toLocaleString('en')}`\r\n\r\n                    const tdEstado = document.createElement('TD');\r\n                    tdEstado.classList.add('table__td');\r\n                    if(diferenciaFechas>0 && pagado==0){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Impaga</span>`\r\n                    }else{\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--${ pagado== 1?'pagado':'impaga'}\">${pagado == 1?'Pagado':'Impaga'}</span>`\r\n                    \r\n                    }   \r\n                    if(combinado == 1){\r\n                        tdEstado.innerHTML = ` <span class=\"table__boton table__boton--vencida\">Combinada</span>`\r\n                    }\r\n\r\n                     \r\n                   \r\n\r\n\r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdEmitida)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdEstado)\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorFactura.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionFactura(factura){\r\n                const {id, numero_factura, fecha_emision, estrato, periodo_inicio, periodo_fin, copago,ajuste, pagado, saldo_anterior, combinado} = factura;\r\n               \r\n           \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#actions')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                const accionesCliente = document.createElement('DIV');\r\n                accionesCliente.classList.add('registrado__datos');\r\n\r\n                const clienteLabel = document.createElement('SPAN');\r\n                clienteLabel.classList.add('registrado__label');\r\n                clienteLabel.textContent = 'Cliente'\r\n                \r\n                const clienteDato = document.createElement('P');\r\n                clienteDato.classList.add('registrado__dato');\r\n                clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesEstrato = document.createElement('DIV');\r\n                accionesEstrato.classList.add('registrado__datos');\r\n\r\n                \r\n                const estratoLabel = document.createElement('SPAN');\r\n                estratoLabel.classList.add('registrado__label');\r\n                estratoLabel.textContent = 'Estrato'\r\n                \r\n                const estratoDato = document.createElement('P');\r\n                estratoDato.classList.add('registrado__dato');\r\n                estratoDato.textContent = estrato\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n\r\n           \r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n\r\n                const montoTotal = parseFloat(copago)+parseFloat(saldo_anterior)-parseFloat(ajuste)\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${montoTotal .toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                accionesCliente.appendChild(clienteLabel);\r\n                accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesEstrato.appendChild(estratoLabel);\r\n                accionesEstrato.appendChild(estratoDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n    \r\n                accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesEstrato);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarFactura(numero_factura);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n               \r\n\r\n                if(pagado==0 && combinado==0){\r\n                    const btnPagar =  document.createElement('SPAN');\r\n                    btnPagar.classList.add('actions__boton');\r\n                    btnPagar.textContent = 'Pago Efectivo';\r\n                    btnPagar.id = 'btnPagar';\r\n                   \r\n                    const btnBanco =  document.createElement('SPAN');\r\n                    btnBanco.classList.add('actions__boton');\r\n                    btnBanco.textContent = 'transferencia';\r\n                    btnBanco.id = 'btnBanco';\r\n\r\n                    btnPagar.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 1, btnPagar,btnBanco);\r\n                    }\r\n                    btnBanco.onclick = function(){\r\n                        btnBanco.style.display = 'none'\r\n                        btnPagar.style.display = 'none'\r\n                        pagarFactura(factura, 0, btnPagar,btnBanco);\r\n                    }\r\n    \r\n                 \r\n                    botonesContenedor.appendChild(btnPagar);\r\n                    botonesContenedor.appendChild(btnBanco);\r\n                }\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarFactura(numero_factura){\r\n               \r\n\r\n                const url =`/api/previsualizar-factura?key=${btoa(numero_factura)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n            function pagarFactura(factura, metodo, btnPagar,btnBanco){\r\n                const {id,copago, periodo_inicio, periodo_fin, numero_factura}  = factura;\r\n   \r\n\r\n                const registrado = document.createElement('DIV');\r\n                registrado.classList.add('registrado');\r\n\r\n                const metodoDatos = document.createElement('DIV');\r\n                metodoDatos.classList.add('registrado__datos');\r\n\r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo de Pago:'\r\n\r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato')\r\n                metodoDato.textContent = metodo==1?'Efectivo':'Transferencia';\r\n\r\n                const registradoDatos = document.createElement('DIV');\r\n                registradoDatos.classList.add('registrado__datos');\r\n\r\n                const registradoLabel = document.createElement('SPAN');\r\n                registradoLabel.classList.add('registrado__label');\r\n                registradoLabel.textContent = 'Cliente:'\r\n\r\n                const registradoDato = document.createElement('P');\r\n                registradoDato.classList.add('registrado__dato')\r\n                registradoDato.textContent = nombreCliente.textContent;\r\n\r\n                const periodoDatos = document.createElement('DIV');\r\n                periodoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo:'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const montoDatos = document.createElement('DIV');\r\n                montoDatos.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto: '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${(parseFloat(copago)).toLocaleString('en')}`;\r\n                \r\n\r\n                \r\n\r\n                \r\n\r\n                metodoDatos.appendChild(metodoLabel);\r\n                metodoDatos.appendChild(metodoDato);\r\n\r\n                registradoDatos.appendChild(registradoLabel);\r\n                registradoDatos.appendChild(registradoDato);\r\n            \r\n                periodoDatos.appendChild(periodoLabel)\r\n                periodoDatos.appendChild(periodoDato)\r\n\r\n                montoDatos.appendChild(montoLabel)\r\n                montoDatos.appendChild(montoDato)\r\n\r\n                registrado.appendChild(metodoDatos);\r\n                registrado.appendChild(registradoDatos);\r\n                registrado.appendChild(periodoDatos);\r\n                registrado.appendChild(montoDatos);\r\n\r\n               \r\n  \r\n\r\n                Swal.fire({\r\n                    title: `Confirme La información`,\r\n                    html: registrado,\r\n                    text:'Esta accion no se puede deshacer',\r\n                    icon: 'question',\r\n                    showDenyButton: true,\r\n                    confirmButtonText: 'Aceptar',\r\n                    denyButtonText: `Cancelar`,\r\n                  }).then((result) => {\r\n                    /* Read more about isConfirmed, isDenied below */\r\n                    if (result.isConfirmed) {\r\n                        enviarInformacionPagar(id, metodo, btnPagar, btnBanco);\r\n                        \r\n                      //Swal.fire('Saved!', '', 'success')\r\n                    }else{\r\n                        btnPagar.style.display = 'block'\r\n                        btnBanco.style.display  = 'block'\r\n                    }\r\n                  })\r\n            }\r\n\r\n            async function enviarInformacionPagar(id, metodo, btnPagar, btnBanco){\r\n                //const url =  'http://localhost:3000/api/pagar'; //desarrollo\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                datos.append('metodo', metodo);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n            \r\n               \r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            \r\n                            text: resultado.mensaje\r\n                          })\r\n                    const body =  document.querySelector('body');\r\n                    const inputHidden = document.createElement(\"input\");\r\n                    inputHidden.type = \"hidden\"; \r\n                    inputHidden.id = \"confirmacionPago\"; \r\n                    body.appendChild(inputHidden);\r\n\r\n\r\n                        while(contenedorFactura.firstChild){\r\n                            contenedorFactura.removeChild(contenedorFactura.firstChild);\r\n                        }\r\n                     \r\n                        document.querySelector('#btnPagar').remove();\r\n                        consultarFacturas();\r\n                     \r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n  \r\n          \r\n\r\n\r\n\r\n            function seleccionFactura(e){\r\n\r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#actions')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n            \r\n       \r\n\r\n       \r\n        \r\n\r\n     }\r\n\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const tablaRegistrados = document.querySelector('#tablaRegistrados');\r\n \r\n    if(tablaRegistrados){\r\n       \r\n        const downloadUsersXlsxBtn = document.querySelector('#downloadUsersXlsx');\r\n        downloadUsersXlsxBtn.addEventListener('click', downloadUsersXlsx)\r\n\r\n      \r\n\r\n        $('#tablaRegistrados').on('click', '#btn_eliminar_registrado', function(e) {\r\n            // Manejar el evento aquí\r\n            leerAccion(e);\r\n            // Resto del código\r\n        });\r\n       \r\n        let tablaRegistradosData;\r\n        mostrarRegistrados();\r\n        verificarCargaTabla();\r\n\r\n        function verificarCargaTabla(){\r\n            tablaRegistradosData.on('draw', eventosClickEditar);\r\n        }\r\n        function eventosClickEditar(){\r\n          \r\n            const btnEliminar = document.querySelectorAll('#btn_eliminar_registrado');\r\n            btnEliminar.forEach(btnEliminar=>{\r\n              \r\n                btnEliminar.addEventListener('click', function(e){\r\n                    // const registradoId = e.currentTarget.dataset.registradoId;\r\n                    leerAccion(e);\r\n                })\r\n            })\r\n        }\r\n        // tablaRegistrados.addEventListener('click',function(e){\r\n        //     leerAccion(e);\r\n        // })\r\n        function leerAccion( e){\r\n       \r\n            if(e.currentTarget.id=='btn_eliminar_registrado'){\r\n                eliminarRegistrado( e);\r\n            }\r\n            \r\n        }\r\n        function eliminarRegistrado(e){\r\n            const registrado = e.currentTarget.parentNode.parentNode.parentNode.children[1].textContent;\r\n            const id = e.currentTarget.dataset.registradoId;\r\n\r\n            \r\n            Swal.fire({\r\n                title: `Esta seguro que desea eliminar el estrato ${registrado}?`,\r\n                text:'Esta accion no se puede deshacer',\r\n                icon: 'question',\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Aceptar',\r\n                denyButtonText: `Cancelar`,\r\n              }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                   \r\n                    enviarInformacionEliminar(id);\r\n                    \r\n                  //Swal.fire('Saved!', '', 'success')\r\n                }\r\n              })\r\n        }\r\n        async function enviarInformacionEliminar(id){\r\n           \r\n       \r\n            const url = `/api/registrados/eliminar?id=${id}`;\r\n           \r\n  \r\n            try {\r\n                const respuesta = await fetch(url)\r\n                const resultado = await respuesta.json();\r\n               \r\n            \r\n                if(resultado.tipo=='error'){\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: resultado.mensaje,\r\n        \r\n                    })\r\n                    return;\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                  \r\n                    text: resultado.mensaje,\r\n                    \r\n                })\r\n                tablaRegistradosData.ajax.reload(); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n        function mostrarRegistrados(){\r\n            $(\"#tablaRegistrados\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaRegistradosData = $('#tablaRegistrados').DataTable({\r\n                ajax: '/api/registrados',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            // $.ajax({\r\n            //     url:'/api/registrados',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.responseText);\r\n            //     }\r\n                \r\n            // })\r\n        }\r\n\r\n     async function downloadUsersXlsx(){\r\n\r\n       \r\n        const url = `/api/registrados/download`;\r\n\r\n        try {\r\n            \r\n            const respuesta = await fetch(url)\r\n          \r\n           \r\n            const resultado = await respuesta.json();\r\n\r\n            console.log(resultado)\r\n\r\n\r\n   // Crear un nuevo libro de Excel\r\n   var workbook = XLSX.utils.book_new();\r\n        \r\n   // Convertir el JSON en una hoja de Excel\r\n   var worksheet = XLSX.utils.json_to_sheet(resultado);\r\n\r\n   // Agregar la hoja de Excel al libro\r\n   XLSX.utils.book_append_sheet(workbook, worksheet, \"Datos\");\r\n\r\n   // Guardar el libro como un archivo XLSX\r\n   XLSX.writeFile(workbook, \"registrados.xlsx\");\r\n        \r\n          \r\n            // tablaRegistradosData.ajax.reload(); \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n \r\n            // var jsonData = [\r\n            //     { Nombre: \"Juan\", Apellido: \"Pérez\", Edad: 30 },\r\n            //     { Nombre: \"María\", Apellido: \"Gómez\", Edad: 25 },\r\n            //     { Nombre: \"Carlos\", Apellido: \"López\", Edad: 35 }\r\n            // ];\r\n        \r\n         \r\n        }\r\n        \r\n    }\r\n})();","\r\n\r\n(function(){\r\n  \r\n    const contenedorPagado = document.querySelector('#pagos');\r\n    if(contenedorPagado){\r\n            let control = true;\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            const id = params.get('id');\r\n            const nombreCliente = document.querySelector('#cliente')\r\n            const actions = document.querySelector('#actions');\r\n            // actions.addEventListener('click',function(e){\r\n           \r\n            //     if(e.target.id=='btnPagar'){\r\n            //        const swal =  document.querySelector('.swal2-confirm')\r\n\r\n            //        swal.addEventListener('click',function(){\r\n            //             setTimeout(()=>{\r\n                         \r\n            //                 consultarPagos();\r\n            //             },2000)\r\n            //        })\r\n            //     }\r\n            // })\r\n\r\n           const body  =  document.querySelector('body');\r\n           body.addEventListener('click',function(){\r\n                const inputHidden = document.querySelector('#confirmacionPago')\r\n                if(inputHidden){\r\n                    consultarPagos();\r\n                  \r\n                }\r\n           })\r\n\r\n            \r\n           \r\n           \r\n            consultarPagos();\r\n    \r\n            \r\n      \r\n            async function consultarPagos(){\r\n                if(document.querySelector('#confirmacionPago')){\r\n                    document.querySelector('#confirmacionPago').remove()\r\n                }\r\n                \r\n            \r\n\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                \r\n                try {\r\n                    //const url = 'http://localhost:3000/api/pagos'//desarrollo \r\n                    const url = '/api/pagos' //produccion\r\n                    const respuesta = await fetch(url, {\r\n                        method:'POST',\r\n                        body: datos\r\n                    });\r\n                    const pagos = await respuesta.json();\r\n                    \r\n                    if(pagos){\r\n                        \r\n                        imprimirResultados(pagos);\r\n                    }\r\n                                  \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n\r\n            function imprimirResultados(pagos){\r\n\r\n                while(contenedorPagado.firstChild){\r\n                    contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                }\r\n             \r\n                const tabla = document.createElement('TABLE');\r\n                tabla.classList.add('table');\r\n\r\n                pagos.forEach(pago => {\r\n  \r\n                    const {id, numero_factura, fecha_pago, periodo_fin, periodo_inicio, monto, numero_pago, estado} = pago\r\n                    const tr = document.createElement('TR');\r\n                    tr.classList.add('table__tr')\r\n                    // tr.dataset.facturaId = id;\r\n                    tr.onclick = function(e){\r\n                        seleccionarPago(e);\r\n                        informacionPago(pago);\r\n                    }\r\n\r\n                    const tdNumeroFactura = document.createElement('TD');\r\n                    tdNumeroFactura.classList.add('table__td');\r\n                    tdNumeroFactura.textContent = `#${numero_factura}`\r\n\r\n                    const tdFechaPago = document.createElement('TD');\r\n                    tdFechaPago.classList.add('table__td');\r\n                    tdFechaPago.innerHTML = `<span class=\"table__span\">Fecha de Pago:&nbsp; </span>&nbsp; ${fecha_pago}`;\r\n\r\n                    const tdPeriodo = document.createElement('TD');\r\n                    tdPeriodo.classList.add('table__td');\r\n                    tdPeriodo.innerHTML = `<span class=\"table__span\">Periodo:&nbsp; </span>&nbsp; ${periodo_inicio} &nbsp; - &nbsp;${periodo_fin}`\r\n\r\n                    const tdMonto = document.createElement('TD');\r\n                    tdMonto.classList.add('table__td');\r\n                    tdMonto.innerHTML = ` <span class=\"table__span\">Monto:&nbsp; </span>$ ${monto}`\r\n\r\n                    const tdNumeroPago = document.createElement('TD');\r\n                    tdNumeroPago.classList.add('table__td');\r\n                    tdNumeroPago.innerHTML = ` <span class=\"table__span\">Pago #&nbsp; </span> ${numero_pago}`\r\n\r\n                    \r\n\r\n                   \r\n\r\n                \r\n\r\n                    tr.appendChild(tdNumeroFactura)\r\n                    tr.appendChild(tdFechaPago)\r\n                    tr.appendChild(tdPeriodo)\r\n                    tr.appendChild(tdMonto)\r\n                    tr.appendChild(tdNumeroPago)\r\n                    if(estado==0){\r\n                      \r\n                        const tdPagoAnulado = document.createElement('TD');\r\n                        tdPagoAnulado.classList.add('table__td');\r\n                        tdPagoAnulado.innerHTML = `<span class=\"table__boton table__boton--vencida\">Anulado</span>`\r\n                        tr.appendChild(tdPagoAnulado);\r\n                    }\r\n                    tabla.appendChild(tr);\r\n\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                contenedorPagado.appendChild(tabla)\r\n\r\n            }\r\n\r\n            function informacionPago(pago){\r\n                const {id, numero_factura,numero_pago, estrato, metodo, periodo_inicio, periodo_fin, monto, recaudador, factura_id} = pago;\r\n               \r\n                limpiarHtml();\r\n                const acciones = document.querySelector('#payments')\r\n              \r\n\r\n                const accionesContenedor = document.createElement('DIV');\r\n                accionesContenedor.classList.add('actions__contenedor')\r\n              \r\n              \r\n                const accionesInfo = document.createElement('DIV');\r\n                accionesInfo.classList.add('actions__info');\r\n\r\n                /* cliente */\r\n\r\n                // const accionesCliente = document.createElement('DIV');\r\n                // accionesCliente.classList.add('registrado__datos');\r\n\r\n                // const clienteLabel = document.createElement('SPAN');\r\n                // clienteLabel.classList.add('registrado__label');\r\n                // clienteLabel.textContent = 'Cliente'\r\n                \r\n                // const clienteDato = document.createElement('P');\r\n                // clienteDato.classList.add('registrado__dato');\r\n                // clienteDato.textContent = nombreCliente.textContent\r\n                \r\n                /* estrato */\r\n\r\n                \r\n                \r\n                const accionesRecaudador = document.createElement('DIV');\r\n                accionesRecaudador.classList.add('registrado__datos');\r\n\r\n                \r\n                const recaudadorLabel = document.createElement('SPAN');\r\n                recaudadorLabel.classList.add('registrado__label');\r\n                recaudadorLabel.textContent = 'Recaudador'\r\n                \r\n                const recaudadorDato = document.createElement('P');\r\n                recaudadorDato.classList.add('registrado__dato');\r\n                recaudadorDato.textContent = recaudador\r\n\r\n                /* Periodo */\r\n\r\n                const accionesPeriodo = document.createElement('DIV');\r\n                accionesPeriodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const periodoLabel = document.createElement('SPAN');\r\n                periodoLabel.classList.add('registrado__label');\r\n                periodoLabel.textContent = 'Periodo'\r\n                \r\n                const periodoDato = document.createElement('P');\r\n                periodoDato.classList.add('registrado__dato');\r\n                \r\n                periodoDato.innerHTML = `${periodo_inicio} &nbsp;- &nbsp;  ${periodo_fin}`\r\n\r\n                /* Monto */\r\n\r\n                const accionesMonto = document.createElement('DIV');\r\n                accionesMonto.classList.add('registrado__datos');\r\n\r\n                \r\n                const montoLabel = document.createElement('SPAN');\r\n                montoLabel.classList.add('registrado__label');\r\n                montoLabel.textContent = 'Monto '\r\n                \r\n                const montoDato = document.createElement('P');\r\n                montoDato.classList.add('registrado__dato');\r\n                montoDato.textContent =`$ ${monto}`;\r\n\r\n                /* comprobante */\r\n                const accionesMetodo = document.createElement('DIV');\r\n                accionesMetodo.classList.add('registrado__datos');\r\n\r\n                \r\n                const metodoLabel = document.createElement('SPAN');\r\n                metodoLabel.classList.add('registrado__label');\r\n                metodoLabel.textContent = 'Metodo '\r\n                \r\n                const metodoDato = document.createElement('P');\r\n                metodoDato.classList.add('registrado__dato');\r\n                metodoDato.textContent =metodo == 1?'Efectivo':  'Transferencia';\r\n                \r\n\r\n                \r\n\r\n                // accionesCliente.appendChild(clienteLabel);\r\n                // accionesCliente.appendChild(clienteDato);\r\n\r\n                accionesRecaudador.appendChild(recaudadorLabel);\r\n                accionesRecaudador.appendChild(recaudadorDato);\r\n                \r\n                accionesPeriodo.appendChild(periodoLabel);\r\n                accionesPeriodo.appendChild(periodoDato);\r\n\r\n                accionesMonto.appendChild(montoLabel);\r\n                accionesMonto.appendChild(montoDato);\r\n\r\n                accionesMetodo.appendChild(metodoLabel);\r\n                accionesMetodo.appendChild(metodoDato);\r\n    \r\n                // accionesContenedor.appendChild(accionesCliente);\r\n                accionesContenedor.appendChild(accionesRecaudador);\r\n                accionesContenedor.appendChild(accionesPeriodo);\r\n                accionesContenedor.appendChild(accionesMonto);\r\n                accionesContenedor.appendChild(accionesMetodo);\r\n\r\n                acciones.appendChild(accionesContenedor)\r\n\r\n                //Botones \r\n                const botonesContenedor = document.createElement('DIV');\r\n                botonesContenedor.classList.add('actions__botones');\r\n\r\n                const btnVerFactura =  document.createElement('SPAN');\r\n                btnVerFactura.classList.add('actions__boton');\r\n\r\n                btnVerFactura.onclick = function(){\r\n                    previsualizarComprobante(factura_id);\r\n                }\r\n                btnVerFactura.textContent = 'Previzualizar';\r\n\r\n                botonesContenedor.appendChild(btnVerFactura);\r\n\r\n              \r\n                acciones.appendChild(botonesContenedor);\r\n\r\n            }\r\n\r\n            async function previsualizarComprobante(factura_id){\r\n               \r\n\r\n                const url =`/api/previsualizar-pago?key=${btoa(factura_id)}`;\r\n                // Abre la URL en una nueva pestaña\r\n                window.open(url, '_blank');\r\n\r\n              \r\n            }\r\n\r\n           \r\n            async function enviarInformacionPagar(id){\r\n                const url =  '/api/pagar';\r\n                const datos = new FormData();\r\n                datos.append('id',id);\r\n                try {\r\n                    const respuesta = await fetch(url,{\r\n                        body:datos,\r\n                        method:'POST'\r\n                    })\r\n                    const resultado = await respuesta.json();\r\n                 \r\n                    if(resultado.tipo == 'error'){\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops',\r\n                            text: resultado.mensaje\r\n                          })\r\n                    }else{\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                          \r\n                            text: resultado.mensaje\r\n                          })\r\n                        while(contenedorPagado.firstChild){\r\n                            contenedorPagado.removeChild(contenedorPagado.firstChild);\r\n                        }\r\n                       \r\n                     \r\n                      \r\n                        consultarPagos();\r\n                    }\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }\r\n\r\n   \r\n          \r\n\r\n\r\n\r\n            function seleccionarPago(e){\r\n                \r\n                const seleccionAnterior =  document.querySelector('.table__seleccion');\r\n                if(seleccionAnterior){\r\n                    seleccionAnterior.classList.remove('table__seleccion')\r\n                }\r\n                const facturaSeleccionada  =e.currentTarget;\r\n                facturaSeleccionada.classList.add('table__seleccion');\r\n            }\r\n\r\n   \r\n\r\n            function limpiarHtml(){\r\n                const acciones = document.querySelector('#payments')\r\n                while(acciones.firstChild){\r\n                    acciones.removeChild(acciones.firstChild);\r\n                }\r\n            }\r\n\r\n\r\n\r\n     }\r\n    \r\n\r\n})();\r\n\r\n"]}